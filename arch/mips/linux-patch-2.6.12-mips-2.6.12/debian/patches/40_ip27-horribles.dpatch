#! /bin/sh -e
## 40_ip27-horribles.dpatch by Thiemo Seufer <seufer@csv.ica.uni-stuttgart.de>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Some horrible hacks to make ip27 appear to work.

if [ $# -lt 1 ]; then
    echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch} ${2:+-d $2}"

case "$1" in
    -patch) patch -p0 ${patch_opts} < $0;;
    -unpatch) patch -R -p0 ${patch_opts} < $0;;
    *)
        echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
        exit 1;;
esac

exit 0

Index: arch/mips/mm/c-r4k.c
===================================================================
RCS file: /home/cvs/linux/arch/mips/mm/c-r4k.c,v
retrieving revision 1.108
diff -u -p -r1.108 c-r4k.c
--- arch/mips/mm/c-r4k.c	25 Apr 2005 16:36:23 -0000	1.108
+++ arch/mips/mm/c-r4k.c	8 Jul 2005 09:17:59 -0000
@@ -1264,9 +1264,8 @@ void __init ld_mmu_r4xx0(void)
 	_dma_cache_inv		= r4k_dma_cache_inv;
 #endif
 
-	__flush_cache_all();
-	coherency_setup();
-
 	build_clear_page();
 	build_copy_page();
+	local_r4k___flush_cache_all(NULL);
+	coherency_setup();
 }
Index: arch/mips/mm/c-tx39.c
===================================================================
RCS file: /home/cvs/linux/arch/mips/mm/c-tx39.c,v
retrieving revision 1.30
diff -u -p -r1.30 c-tx39.c
--- arch/mips/mm/c-tx39.c	27 Jun 2005 08:39:23 -0000	1.30
+++ arch/mips/mm/c-tx39.c	8 Jul 2005 09:17:59 -0000
@@ -492,4 +492,5 @@ void __init ld_mmu_tx39(void)
 
 	build_clear_page();
 	build_copy_page();
+	tx39h_flush_icache_all();
 }
Index: arch/mips/mm/pg-r4k.c
===================================================================
RCS file: /home/cvs/linux/arch/mips/mm/pg-r4k.c,v
retrieving revision 1.16
diff -u -p -r1.16 pg-r4k.c
--- arch/mips/mm/pg-r4k.c	15 Jan 2005 01:31:05 -0000	1.16
+++ arch/mips/mm/pg-r4k.c	8 Jul 2005 09:17:59 -0000
@@ -404,9 +404,6 @@ dest = label();
 
 	build_jr_ra();
 
-	flush_icache_range((unsigned long)&clear_page_array,
-	                   (unsigned long) epc);
-
 	BUG_ON(epc > clear_page_array + ARRAY_SIZE(clear_page_array));
 }
 
@@ -482,8 +479,5 @@ dest = label();
 
 	build_jr_ra();
 
-	flush_icache_range((unsigned long)&copy_page_array,
-	                   (unsigned long) epc);
-
 	BUG_ON(epc > copy_page_array + ARRAY_SIZE(copy_page_array));
 }
Index: arch/mips/mm/tlbex.c
===================================================================
RCS file: /home/cvs/linux/arch/mips/mm/tlbex.c,v
retrieving revision 1.26
diff -u -p -r1.26 tlbex.c
--- arch/mips/mm/tlbex.c	30 Jun 2005 10:51:01 -0000	1.26
+++ arch/mips/mm/tlbex.c	8 Jul 2005 09:17:59 -0000
@@ -743,7 +743,6 @@ static void __init build_r3000_tlb_refil
 #endif
 
 	memcpy((void *)CAC_BASE, tlb_handler, 0x80);
-	flush_icache_range(CAC_BASE, CAC_BASE + 0x80);
 }
 
 /*
@@ -1256,7 +1255,6 @@ static void __init build_r4000_tlb_refil
 #endif
 
 	memcpy((void *)CAC_BASE, final_handler, 0x100);
-	flush_icache_range(CAC_BASE, CAC_BASE + 0x100);
 }
 
 /*
@@ -1517,9 +1515,6 @@ static void __init build_r3000_tlb_load_
 			printk("%08x\n", handle_tlbl[i]);
 	}
 #endif
-
-	flush_icache_range((unsigned long)handle_tlbl,
-			   (unsigned long)handle_tlbl + FASTPATH_SIZE * sizeof(u32));
 }
 
 static void __init build_r3000_tlb_store_handler(void)
@@ -1557,9 +1552,6 @@ static void __init build_r3000_tlb_store
 			printk("%08x\n", handle_tlbs[i]);
 	}
 #endif
-
-	flush_icache_range((unsigned long)handle_tlbs,
-			   (unsigned long)handle_tlbs + FASTPATH_SIZE * sizeof(u32));
 }
 
 static void __init build_r3000_tlb_modify_handler(void)
@@ -1597,9 +1589,6 @@ static void __init build_r3000_tlb_modif
 			printk("%08x\n", handle_tlbm[i]);
 	}
 #endif
-
-	flush_icache_range((unsigned long)handle_tlbm,
-			   (unsigned long)handle_tlbm + FASTPATH_SIZE * sizeof(u32));
 }
 
 /*
@@ -1689,9 +1678,6 @@ static void __init build_r4000_tlb_load_
 			printk("%08x\n", handle_tlbl[i]);
 	}
 #endif
-
-	flush_icache_range((unsigned long)handle_tlbl,
-			   (unsigned long)handle_tlbl + FASTPATH_SIZE * sizeof(u32));
 }
 
 static void __init build_r4000_tlb_store_handler(void)
@@ -1728,9 +1714,6 @@ static void __init build_r4000_tlb_store
 			printk("%08x\n", handle_tlbs[i]);
 	}
 #endif
-
-	flush_icache_range((unsigned long)handle_tlbs,
-			   (unsigned long)handle_tlbs + FASTPATH_SIZE * sizeof(u32));
 }
 
 static void __init build_r4000_tlb_modify_handler(void)
@@ -1768,9 +1751,6 @@ static void __init build_r4000_tlb_modif
 			printk("%08x\n", handle_tlbm[i]);
 	}
 #endif
-
-	flush_icache_range((unsigned long)handle_tlbm,
-			   (unsigned long)handle_tlbm + FASTPATH_SIZE * sizeof(u32));
 }
 
 void __init build_tlb_refill_handler(void)
Index: arch/mips/pci/pci.c
===================================================================
RCS file: /home/cvs/linux/arch/mips/pci/pci.c,v
retrieving revision 1.30
diff -u -p -r1.30 pci.c
--- arch/mips/pci/pci.c	16 Dec 2004 12:55:01 -0000	1.30
+++ arch/mips/pci/pci.c	8 Jul 2005 09:17:59 -0000
@@ -20,11 +20,19 @@
  * Make this long-lived  so that we know when shutting down
  * whether we probed only or not.
  */
-int pci_probe_only;
+#ifdef CONFIG_MIPS_SGI_IP27
+int pci_probe_only = 1;
+#else
+int pci_probe_only;
+#endif
 
 #define PCI_ASSIGN_ALL_BUSSES	1
 
-unsigned int pci_probe = PCI_ASSIGN_ALL_BUSSES;
+#ifdef CONFIG_MIPS_SGI_IP27
+unsigned int pci_probe = 0;
+#else
+unsigned int pci_probe = PCI_ASSIGN_ALL_BUSSES;
+#endif
 
 /*
  * The PCI controller list.
