#! /bin/sh -e
## 11_byteorder-proc.dpatch by ???
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Add byteorder info to /proc/cpuinfo

if [ $# -lt 1 ]; then
    echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch} ${2:+-d $2}"

case "$1" in
    -patch) patch -p0 ${patch_opts} < $0;;
    -unpatch) patch -R -p0 ${patch_opts} < $0;;
    *)
        echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
        exit 1;;
esac

exit 0

Index: arch/mips/kernel/proc.c
===================================================================
RCS file: /home/cvs/linux/arch/mips/kernel/proc.c,v
retrieving revision 1.27.2.17
diff -u -p -u -r1.27.2.17 proc.c
--- arch/mips/kernel/proc.c	27 Apr 2003 23:34:46 -0000	1.27.2.17
+++ arch/mips/kernel/proc.c	21 Sep 2003 00:14:13 -0000
@@ -100,6 +100,11 @@ static int show_cpuinfo(struct seq_file 
 	seq_printf(m, "BogoMIPS\t\t: %lu.%02lu\n",
 	              cpu_data[n].udelay_val / (500000/HZ),
 	              (cpu_data[n].udelay_val / (5000/HZ)) % 100);
+#ifdef __MIPSEB__
+	seq_printf(m, "byteorder\t\t: big endian\n");
+#else
+	seq_printf(m, "byteorder\t\t: little endian\n");
+#endif
 	seq_printf(m, "wait instruction\t: %s\n", cpu_wait ? "yes" : "no");
 	seq_printf(m, "microsecond timers\t: %s\n",
 	              cpu_has_counter ? "yes" : "no");
