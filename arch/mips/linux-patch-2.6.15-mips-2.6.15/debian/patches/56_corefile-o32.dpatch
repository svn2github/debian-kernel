#! /bin/sh -e
## 56_corefile-o32.dpatch by Dave Johnson <djohnson+linuxmips@sw.starentnetworks.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: gdb gets confused with o32 core files, WANT_COMPAT_REG_H needed?

if [ $# -lt 1 ]; then
    echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch} ${2:+-d $2}"

case "$1" in
    -patch) patch -p1 ${patch_opts} < $0;;
    -unpatch) patch -R -p1 ${patch_opts} < $0;;
    *)
        echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
        exit 1;;
esac

exit 0

I've been trying to fix core file support for 64bit kernel with o32
userspace (working against 2.6.12 cvs tag).

After applying the patch posted on 13 Feb 2005 from Daniel Jacobowitz
to fix binfmt_elfo32.c (any reason this didn't make it into CVS?),
I still ran into trouble with gdb not understanding the NT_PRSTATUS
header in the core file.

While Dan's fix makes the kernel use elf32 definitions, gdb was still
getting confused by pr_reg contained in the core file.

Dan's definition of ELF_CORE_COPY_REGS in binfmt_elfo32.c is copying
the registers using EF_R0 as 0 not 6 producing results into offset 0
through 37 not 6 through 43 as gdb expects for 32bit core files.

Below patch (applied after Dan's patch) writes the registers at offset
6 making gdb much happier.

=======================

Fix o32 core files under 64bit kernel to use correct register
offset in NT_PRSTATUS

Signed-off-by: Dave Johnson <djohnson+linuxmips@sw.starentnetworks.com>


diff -urN linux-mips/arch/mips/kernel/binfmt_elfo32.c new/arch/mips/kernel/binfmt_elfo32.c
--- linux-mips/arch/mips/kernel/binfmt_elfo32.c	2006-01-10 11:21:15.000000000 +0000
+++ new/arch/mips/kernel/binfmt_elfo32.c	2006-01-16 17:00:22.000000000 +0000
@@ -51,6 +51,7 @@
 #define TASK32_SIZE		0x7fff8000UL
 #undef ELF_ET_DYN_BASE
 #define ELF_ET_DYN_BASE         (TASK32_SIZE / 3 * 2)
+#define WANT_COMPAT_REG_H
 
 #include <asm/processor.h>
 #include <linux/module.h>
diff -urN linux-mips/include/asm-mips/reg.h new/include/asm-mips/reg.h
--- linux-mips/include/asm-mips/reg.h	2006-01-10 11:30:59.000000000 +0000
+++ new/include/asm-mips/reg.h	2006-01-16 17:01:15.000000000 +0000
@@ -70,7 +70,7 @@
 
 #endif
 
-#ifdef CONFIG_64BIT
+#if defined(CONFIG_64BIT) && !defined(WANT_COMPAT_REG_H)
 
 #define EF_R0			 0
 #define EF_R1			 1
