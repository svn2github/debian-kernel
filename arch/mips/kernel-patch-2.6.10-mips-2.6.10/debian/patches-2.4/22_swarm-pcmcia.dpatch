#! /bin/sh -e
## 22_swarm-pcmcia.dpatch by Peter de Schrijver <p2@mind.be>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix PCMCIA initialization.

if [ $# -lt 1 ]; then
    echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch} ${2:+-d $2}"

case "$1" in
    -patch) patch -p1 ${patch_opts} < $0;;
    -unpatch) patch -R -p1 ${patch_opts} < $0;;
    *)
        echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
        exit 1;;
esac

exit 0

--- kernel-source-2.4.26/drivers/pcmcia/cs.c.old	2004-02-21 04:47:08.000000000 +0100
+++ kernel-source-2.4.26/drivers/pcmcia/cs.c	2004-05-11 20:26:35.000000000 +0200
@@ -1720,6 +1720,7 @@ int pcmcia_request_configuration(client_
 	c->Copy = req->Copy;
 	write_cis_mem(s, 1, (base + CISREG_SCR)>>1, 1, &c->Copy);
     }
+#ifndef CONFIG_SIBYTE_SB1xxx_SOC
     if (req->Present & PRESENT_OPTION) {
 	if (s->functions == 1) {
 	    c->Option = req->ConfigIndex & COR_CONFIG_MASK;
@@ -1735,6 +1736,7 @@ int pcmcia_request_configuration(client_
 	write_cis_mem(s, 1, (base + CISREG_COR)>>1, 1, &c->Option);
 	mdelay(40);
     }
+#endif
     if (req->Present & PRESENT_STATUS) {
 	c->Status = req->Status;
 	write_cis_mem(s, 1, (base + CISREG_CCSR)>>1, 1, &c->Status);
