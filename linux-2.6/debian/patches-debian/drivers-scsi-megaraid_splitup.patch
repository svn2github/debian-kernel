# drivers-scsi-megaraid_splitup.patch by Frederik Sch√ºler <fs@debian.org>
# Patch author: Ben Collins <bcollins@ubuntu.com>
# Upstream status: not submitted
# Description: Support megaraid legacy and megraid newgen, side-by-side
# Source: ubuntu-2.6 git
# diff from ca0e9390e01be69893d78bf9576d63ec85a6965e to 03bba4e0c091909e36520f2e617e51e87e50f8cd 
# diff from e82633eb19c4b390846a6eecd72204b696448954 to 8378e9887b6cf0b99e28a3b71c585bd1279932f7

diff --git a/drivers/scsi/megaraid/Kconfig.megaraid b/drivers/scsi/megaraid/Kconfig.megaraid
index 7363e12..d71a230 100644
--- a/drivers/scsi/megaraid/Kconfig.megaraid
+++ b/drivers/scsi/megaraid/Kconfig.megaraid
@@ -1,12 +1,6 @@
-config MEGARAID_NEWGEN
-	bool "LSI Logic New Generation RAID Device Drivers"
-	depends on PCI && SCSI
-	help
-	LSI Logic RAID Device Drivers
-
 config MEGARAID_MM
 	tristate "LSI Logic Management Module (New Driver)"
-	depends on PCI && SCSI && MEGARAID_NEWGEN
+	depends on PCI && SCSI
 	help
 	Management Module provides ioctl, sysfs support for LSI Logic
 	RAID controllers.
@@ -64,18 +58,15 @@ config MEGARAID_MAILBOX
 	To compile this driver as a module, choose M here: the
 	module will be called megaraid_mbox
 
-if MEGARAID_NEWGEN=n
 config MEGARAID_LEGACY
 	tristate "LSI Logic Legacy MegaRAID Driver"
 	depends on PCI && SCSI
 	help
-	This driver supports the LSI MegaRAID 418, 428, 438, 466, 762, 490
-	and 467 SCSI host adapters. This driver also support the all U320
-	RAID controllers
+	This driver supports the AMI MEGARAID 1 and 2, and the HP NETRAID
+	1 and 2
 
 	To compile this driver as a module, choose M here: the
 	module will be called megaraid
-endif
 
 config MEGARAID_SAS
 	tristate "LSI Logic MegaRAID SAS RAID Module"
diff --git a/drivers/scsi/megaraid.h b/drivers/scsi/megaraid.h
index 4facf55..59cdd2a 100644
--- a/drivers/scsi/megaraid.h
+++ b/drivers/scsi/megaraid.h
@@ -84,6 +84,10 @@
 #define LSI_SUBSYS_VID			0x1000
 #define INTEL_SUBSYS_VID		0x8086
 
+/* Sub-System Device IDs */
+#define HP_NETRAID1M_SUBSYS_DID		0x60E7
+#define HP_NETRAID2M_SUBSYS_DID		0x60E8
+
 #define HBA_SIGNATURE	      		0x3344
 #define HBA_SIGNATURE_471	  	0xCCCC
 #define HBA_SIGNATURE_64BIT		0x0299
--- a/drivers/scsi/megaraid.c
+++ b/drivers/scsi/megaraid.c
@@ -4570,7 +4570,7 @@
 };
 
 static int __devinit
-megaraid_probe_one(struct pci_dev *pdev, const struct pci_device_id *id)
+megaraid_legacy_probe_one(struct pci_dev *pdev, const struct pci_device_id *id)
 {
 	struct Scsi_Host *host;
 	adapter_t *adapter;
@@ -5036,36 +5036,28 @@
 	__megaraid_shutdown(adapter);
 }
 
-static struct pci_device_id megaraid_pci_tbl[] = {
-	{PCI_VENDOR_ID_DELL, PCI_DEVICE_ID_DISCOVERY,
-		PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
-	{PCI_VENDOR_ID_DELL, PCI_DEVICE_ID_PERC4_DI,
-		PCI_ANY_ID, PCI_ANY_ID, 0, 0, BOARD_64BIT},
-	{PCI_VENDOR_ID_LSI_LOGIC, PCI_DEVICE_ID_PERC4_QC_VERDE,
-		PCI_ANY_ID, PCI_ANY_ID, 0, 0, BOARD_64BIT},
+static struct pci_device_id megaraid_legacy_pci_tbl[] = {
 	{PCI_VENDOR_ID_AMI, PCI_DEVICE_ID_AMI_MEGARAID,
 		PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
 	{PCI_VENDOR_ID_AMI, PCI_DEVICE_ID_AMI_MEGARAID2,
 		PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
 	{PCI_VENDOR_ID_AMI, PCI_DEVICE_ID_AMI_MEGARAID3,
-		PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
-	{PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_AMI_MEGARAID3,
-		PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
-	{PCI_VENDOR_ID_LSI_LOGIC, PCI_DEVICE_ID_AMI_MEGARAID3,
-		PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
+		HP_SUBSYS_VID, HP_NETRAID1M_SUBSYS_DID, 0, 0, 0},
+	{PCI_VENDOR_ID_AMI, PCI_DEVICE_ID_AMI_MEGARAID3,
+		HP_SUBSYS_VID, HP_NETRAID2M_SUBSYS_DID, 0, 0, 0},
 	{0,}
 };
-MODULE_DEVICE_TABLE(pci, megaraid_pci_tbl);
+MODULE_DEVICE_TABLE(pci, megaraid_legacy_pci_tbl);
 
-static struct pci_driver megaraid_pci_driver = {
-	.name		= "megaraid",
-	.id_table	= megaraid_pci_tbl,
-	.probe		= megaraid_probe_one,
+static struct pci_driver megaraid_legacy_pci_driver = {
+	.name		= "megaraidlegacy",
+	.id_table	= megaraid_legacy_pci_tbl,
+	.probe		= megaraid_legacy_probe_one,
 	.remove		= __devexit_p(megaraid_remove_one),
 	.shutdown	= megaraid_shutdown,
 };
 
-static int __init megaraid_init(void)
+static int __init megaraid_legacy_init(void)
 {
 	int error;
 
@@ -5081,7 +5073,7 @@
 				"megaraid: failed to create megaraid root\n");
 	}
 #endif
-	error = pci_module_init(&megaraid_pci_driver);
+	error = pci_module_init(&megaraid_legacy_pci_driver);
 	if (error) {
 #ifdef CONFIG_PROC_FS
 		remove_proc_entry("megaraid", &proc_root);
@@ -5104,21 +5096,21 @@
 	return 0;
 }
 
-static void __exit megaraid_exit(void)
+static void __exit megaraid_legacy_exit(void)
 {
 	/*
 	 * Unregister the character device interface to the driver.
 	 */
 	unregister_chrdev(major, "megadev");
 
-	pci_unregister_driver(&megaraid_pci_driver);
+	pci_unregister_driver(&megaraid_legacy_pci_driver);
 
 #ifdef CONFIG_PROC_FS
 	remove_proc_entry("megaraid", &proc_root);
 #endif
 }
 
-module_init(megaraid_init);
-module_exit(megaraid_exit);
+module_init(megaraid_legacy_init);
+module_exit(megaraid_legacy_exit);
 
 /* vi: set ts=8 sw=8 tw=78: */
