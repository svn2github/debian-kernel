From c8a3b4da329c53ccaa8075344d9fe3bda0a9ae2e Mon Sep 17 00:00:00 2001
From: Ben Hutchings <ben@decadent.org.uk>
Date: Thu, 11 Jun 2009 14:25:05 +0100
Subject: [PATCH] cxgb3: Disable AEL20xx firmware and mark it for removal

---
 drivers/net/cxgb3/ael1002.c |   21 +++++++++++++++++++++
 1 files changed, 21 insertions(+), 0 deletions(-)

diff --git a/drivers/net/cxgb3/ael1002.c b/drivers/net/cxgb3/ael1002.c
index 9fe008e..f94f237 100644
--- a/drivers/net/cxgb3/ael1002.c
+++ b/drivers/net/cxgb3/ael1002.c
@@ -298,12 +298,14 @@ unknown:
  */
 static int ael2005_setup_sr_edc(struct cphy *phy)
 {
+#if 0
 	static struct reg_val regs[] = {
 		{ MDIO_MMD_PMAPMD, 0xc003, 0xffff, 0x181 },
 		{ MDIO_MMD_PMAPMD, 0xc010, 0xffff, 0x448a },
 		{ MDIO_MMD_PMAPMD, 0xc04a, 0xffff, 0x5200 },
 		{ 0, 0, 0, 0 }
 	};
+#ifdef REMOVE_DFSG
 	static u16 sr_edc[] = {
 		0xcc00, 0x2ff4,
 		0xcc01, 0x3cd4,
@@ -577,6 +579,7 @@ static int ael2005_setup_sr_edc(struct cphy *phy)
 		0xcd0d, 0x1002,
 		0xcd0e, 0
 	};
+#endif /* REMOVE_DFSG */
 	int i, err;
 
 	err = set_phy_regs(phy, regs);
@@ -591,10 +594,15 @@ static int ael2005_setup_sr_edc(struct cphy *phy)
 	if (!err)
 		phy->priv = edc_sr;
 	return err;
+#else
+	CH_ERR(phy->adapter, "SR EDC firmware not available\n");
+	return -ENODEV;
+#endif
 }
 
 static int ael2005_setup_twinax_edc(struct cphy *phy, int modtype)
 {
+#if 0
 	static struct reg_val regs[] = {
 		{ MDIO_MMD_PMAPMD, 0xc04a, 0xffff, 0x5a00 },
 		{ 0, 0, 0, 0 }
@@ -604,6 +612,7 @@ static int ael2005_setup_twinax_edc(struct cphy *phy, int modtype)
 		{ MDIO_MMD_PMAPMD, 0xc015, 0xffff, 0xa000 },
 		{ 0, 0, 0, 0 }
 	};
+#ifdef REMOVE_DFSG
 	static u16 twinax_edc[] = {
 		0xcc00, 0x4009,
 		0xcc01, 0x27ff,
@@ -972,6 +981,7 @@ static int ael2005_setup_twinax_edc(struct cphy *phy, int modtype)
 		0xcd6c, 0x1002,
 		0xcd6d, 0
 	};
+#endif /* REMOVE_DFSG */
 	int i, err;
 
 	err = set_phy_regs(phy, regs);
@@ -988,6 +998,10 @@ static int ael2005_setup_twinax_edc(struct cphy *phy, int modtype)
 	if (!err)
 		phy->priv = edc_twinax;
 	return err;
+#else
+	CH_ERR(phy->adapter, "TWINAX EDC firmware not available\n");
+	return -ENODEV;
+#endif
 }
 
 static int ael2005_get_module_type(struct cphy *phy, int delay_ms)
@@ -1182,6 +1196,7 @@ static int ael2020_setup_sr_edc(struct cphy *phy)
  */
 static int ael2020_setup_twinax_edc(struct cphy *phy, int modtype)
 {
+#if 0
 	/* set uC to 40MHz */
 	static struct reg_val uCclock40MHz[] = {
 		{ MDIO_MMD_PMAPMD, 0xff28, 0xffff, 0x4001 },
@@ -1202,6 +1217,7 @@ static int ael2020_setup_twinax_edc(struct cphy *phy, int modtype)
 		{ 0, 0, 0, 0 }
 	};
 
+#ifdef REMOVE_DFSG
 	/* TWINAX EDC firmware */
 	static u16 twinax_edc[] = {
 		0xd800, 0x4009,
@@ -1600,6 +1616,7 @@ static int ael2020_setup_twinax_edc(struct cphy *phy, int modtype)
 		0xd989, 0x1002,
 		0xd98a, 0x0000,
 	};
+#endif /* REMOVE_DFSG */
 	int i, err;
 
 	/* set uC clock and activate it */
@@ -1621,6 +1638,10 @@ static int ael2020_setup_twinax_edc(struct cphy *phy, int modtype)
 	if (!err)
 		phy->priv = edc_twinax;
 	return err;
+#else
+	CH_ERR(phy->adapter, "TWINAX EDC firmware not available\n");
+	return -ENODEV;
+#endif
 }
 
 /*
-- 
1.6.3.1

