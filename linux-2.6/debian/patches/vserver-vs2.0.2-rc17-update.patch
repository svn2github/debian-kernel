diff -urN linux-2.6-2.6.16-vs2.0.2-rc16/fs/namei.c linux-2.6-2.6.16-vs2.0.2-rc17/fs/namei.c
--- linux-2.6-2.6.16-vs2.0.2-rc16/fs/namei.c	2006-04-19 14:47:38.000000000 +0200
+++ linux-2.6-2.6.16-vs2.0.2-rc17/fs/namei.c	2006-04-19 14:48:36.000000000 +0200
@@ -242,7 +242,7 @@
 
 	vxwprintk(1, "xid=%d denied access to %p[#%d,%lu] »%s«.",
 		vx_current_xid(), inode, inode->i_xid, inode->i_ino,
-		vxd_path(nd->dentry, nd->mnt));
+		vxd_cond_path(nd));
 	return -EACCES;
 }
 
diff -urN linux-2.6-2.6.16-vs2.0.2-rc16/include/linux/vserver/debug.h linux-2.6-2.6.16-vs2.0.2-rc17/include/linux/vserver/debug.h
--- linux-2.6-2.6.16-vs2.0.2-rc16/include/linux/vserver/debug.h	2006-04-19 14:47:39.000000000 +0200
+++ linux-2.6-2.6.16-vs2.0.2-rc17/include/linux/vserver/debug.h	2006-04-19 14:48:36.000000000 +0200
@@ -60,11 +60,13 @@
 			printk(VX_WARNLEVEL f "\n" , ##x);	\
 	} while (0)
 
-
 #define vxd_path(d,m)						\
 	({ static char _buffer[PATH_MAX];			\
 	   d_path((d), (m), _buffer, sizeof(_buffer)); })
 
+#define vxd_cond_path(n)					\
+	((n) ? vxd_path((n)->dentry, (n)->mnt) : "<null>" )
+
 #else	/* CONFIG_VSERVER_DEBUG */
 
 #define vx_debug_switch 0
@@ -82,6 +84,7 @@
 #define vxwprintk(x...) do { } while (0)
 
 #define vxd_path	"<none>"
+#define vxd_cond_path	vxd_path
 
 #endif	/* CONFIG_VSERVER_DEBUG */
 
diff -urN linux-2.6-2.6.16-vs2.0.2-rc16/net/ipv4/devinet.c linux-2.6-2.6.16-vs2.0.2-rc17/net/ipv4/devinet.c
--- linux-2.6-2.6.16-vs2.0.2-rc16/net/ipv4/devinet.c	2006-04-19 14:47:39.000000000 +0200
+++ linux-2.6-2.6.16-vs2.0.2-rc17/net/ipv4/devinet.c	2006-04-19 14:48:37.000000000 +0200
@@ -529,33 +529,6 @@
   	return rc;
 }
 
-/*
-	Check that a device is not member of the ipv4root assigned to the process
-	Return true if this is the case
-
-	If the process is not bound to specific IP, then it returns 0 (all
-	interface are fine).
-*/
-static inline int devinet_notiproot (struct in_ifaddr *ifa)
-{
-	int ret = 0;
-	struct nx_info *nxi;
-
-	if ((nxi = current->nx_info)) {
-		int i;
-		int nbip = nxi->nbipv4;
-		__u32 addr = ifa->ifa_local;
-		ret = 1;
-		for (i=0; i<nbip; i++) {
-			if(nxi->ipv4[i] == addr) {
-				ret = 0;
-				break;
-			}
-		}
-	}
-	return ret;
-}
-
 
 int devinet_ioctl(unsigned int cmd, void __user *arg)
 {
