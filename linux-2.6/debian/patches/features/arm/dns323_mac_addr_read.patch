Matthew Palmer <mpalmer@hezmatt.org>
Subject: DNS-323: read MAC address from flash

--- a/arch/arm/mach-orion5x/dns323-setup.c	2008-10-17 21:56:01.000000000 +1100
+++ b/arch/arm/mach-orion5x/dns323-setup.c	2008-10-17 23:04:16.000000000 +1100
@@ -76,15 +76,6 @@
 subsys_initcall(dns323_pci_init);
 
 /****************************************************************************
- * Ethernet
- */
-
-static struct mv643xx_eth_platform_data dns323_eth_data = {
-	.phy_addr = 8,
-	.force_phy_addr = 1,
-};
-
-/****************************************************************************
  * 8MiB NOR flash (Spansion S29GL064M90TFIR4)
  *
  * Layout as used by D-Link:
@@ -143,6 +134,79 @@
 };
 
 /****************************************************************************
+ * Ethernet
+ */
+
+static struct mv643xx_eth_platform_data dns323_eth_data = {
+	.phy_addr = 8,
+	.force_phy_addr = 1,
+};
+
+/* parse_hex_*() taken from ts209-setup.c; should a common copy of these
+ * functions be kept somewhere?
+ */
+static int __init parse_hex_nibble(char n)
+{
+	if (n >= '0' && n <= '9')
+		return n - '0';
+
+	if (n >= 'A' && n <= 'F')
+		return n - 'A' + 10;
+
+	if (n >= 'a' && n <= 'f')
+		return n - 'a' + 10;
+
+	return -1;
+}
+
+static int __init parse_hex_byte(const char *b)
+{
+	int hi;
+	int lo;
+
+	hi = parse_hex_nibble(b[0]);
+	lo = parse_hex_nibble(b[1]);
+
+	if (hi < 0 || lo < 0)
+		return -1;
+
+	return (hi << 4) | lo;
+}
+
+static int __init dns323_read_mac_addr(void)
+{
+	u_int8_t addr[6] = { 0x00, 0x00, 0xDE, 0xAD, 0xBE, 0xEF };
+	int i;
+	char *mac_page;
+	
+	/* MAC address is stored as a regular ol' string in /dev/mtdblock4
+	 * (0x007d0000-0x00800000) starting at offset 196480 (0x2ff80).
+	 */
+	mac_page = ioremap(DNS323_NOR_BOOT_BASE + 0x7d0000 + 196480, 1024);
+	
+	for (i = 0; i < 6; i++)	{
+		int byte;
+		
+		byte = parse_hex_byte(mac_page + (i * 3));
+		if (byte < 0) {
+			iounmap(mac_page);
+			return -1;
+		}
+		
+		addr[i] = byte;
+	}
+	
+	iounmap(mac_page);
+	printk("DNS323: Found ethernet MAC address: ");
+	for (i = 0; i < 6; i++)
+		printk("%.2x%s", addr[i], (i < 5) ? ":" : ".\n");
+	
+	memcpy(dns323_eth_data.mac_addr, addr, 6);
+	
+	return 0;
+}
+
+/****************************************************************************
  * GPIO LEDs (simple - doesn't use hardware blinking support)
  */
 
@@ -305,6 +369,9 @@
 	i2c_register_board_info(0, dns323_i2c_devices,
 				ARRAY_SIZE(dns323_i2c_devices));
 
+	if (dns323_read_mac_addr() < 0)
+		printk("ERROR: Failed to read MAC address\n");
+		
 	orion5x_eth_init(&dns323_eth_data);
 }
 
