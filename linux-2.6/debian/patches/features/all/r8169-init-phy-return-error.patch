From 3b59832103a30e3c70251667793f90ab3bd1427b Mon Sep 17 00:00:00 2001
From: Ben Hutchings <ben@decadent.org.uk>
Date: Sun, 1 Nov 2009 22:35:15 +0000
Subject: [PATCH 23/24] r8169: allow rtl_hw_phy_config() and rtl8169_init_phy() to return error codes

This is preparation for loading PHY firmware, which may fail.
---
 drivers/net/r8169.c |   17 +++++++++++++----
 1 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/drivers/net/r8169.c b/drivers/net/r8169.c
index b753f4b..80a9d03 100644
--- a/drivers/net/r8169.c
+++ b/drivers/net/r8169.c
@@ -1944,7 +1944,7 @@ static void rtl8102e_hw_phy_config(void __iomem *ioaddr)
 	rtl_phy_write(ioaddr, phy_reg_init, ARRAY_SIZE(phy_reg_init));
 }
 
-static void rtl_hw_phy_config(struct net_device *dev)
+static int rtl_hw_phy_config(struct net_device *dev)
 {
 	struct rtl8169_private *tp = netdev_priv(dev);
 	void __iomem *ioaddr = tp->mmio_addr;
@@ -2013,6 +2013,8 @@ static void rtl_hw_phy_config(struct net_device *dev)
 	default:
 		break;
 	}
+
+	return 0;
 }
 
 static void rtl8169_phy_timer(unsigned long __opaque)
@@ -2117,11 +2119,14 @@ static void rtl8169_phy_reset(struct net_device *dev,
 		printk(KERN_ERR "%s: PHY reset failed.\n", dev->name);
 }
 
-static void rtl8169_init_phy(struct net_device *dev, struct rtl8169_private *tp)
+static int rtl8169_init_phy(struct net_device *dev, struct rtl8169_private *tp)
 {
 	void __iomem *ioaddr = tp->mmio_addr;
+	int rc;
 
-	rtl_hw_phy_config(dev);
+	rc = rtl_hw_phy_config(dev);
+	if (rc)
+		return rc;
 
 	if (tp->mac_version <= RTL_GIGA_MAC_VER_06) {
 		dprintk("Set MAC Reg C+CR Offset 0x82h = 0x01h\n");
@@ -2150,6 +2155,8 @@ static void rtl8169_init_phy(struct net_device *dev, struct rtl8169_private *tp)
 
 	if ((RTL_R8(PHYstatus) & TBI_Enable) && netif_msg_link(tp))
 		printk(KERN_INFO PFX "%s: TBI auto-negotiating\n", dev->name);
+
+	return 0;
 }
 
 static void rtl_rar_set(struct rtl8169_private *tp, u8 *addr)
@@ -2536,7 +2543,9 @@ rtl8169_init_one(struct pci_dev *pdev, const struct pci_device_id *ent)
 		       dev->dev_addr[4], dev->dev_addr[5], xid, dev->irq);
 	}
 
-	rtl8169_init_phy(dev, tp);
+	rc = rtl8169_init_phy(dev, tp);
+	if (rc)
+		goto err_out_msi_5;
 
 	/*
 	 * Pretend we are using VLANs; This bypasses a nasty bug where
-- 
1.6.5.2

