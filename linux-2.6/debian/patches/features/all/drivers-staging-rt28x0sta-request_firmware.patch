From a504b7009265d58543dcb3446421da51424241d4 Mon Sep 17 00:00:00 2001
From: Ben Hutchings <ben@decadent.org.uk>
Date: Sun, 28 Jun 2009 15:51:07 +0100
Subject: [PATCH] rt2860/2870/3070: use the firmware loader interface and library CRC code

Based on work by Darren Salt <linux@youmustbejoking.demon.co.uk>.
---
 drivers/staging/rt2860/Kconfig            |    3 +-
 drivers/staging/rt2860/common/rtmp_init.c |  159 ++++++++++++-----------------
 drivers/staging/rt2870/Kconfig            |    3 +-
 drivers/staging/rt3070/Kconfig            |    3 +-
 4 files changed, 70 insertions(+), 98 deletions(-)

diff --git a/drivers/staging/rt2860/Kconfig b/drivers/staging/rt2860/Kconfig
index 9fb130d..d75a87a 100644
--- a/drivers/staging/rt2860/Kconfig
+++ b/drivers/staging/rt2860/Kconfig
@@ -1,6 +1,7 @@
 config RT2860
 	tristate "Ralink 2860 wireless support"
-	depends on BROKEN
 	depends on PCI && X86 && WLAN_80211
+	select CRC_ITU_T
+	select FW_LOADER
 	---help---
 	  This is an experimental driver for the Ralink 2860 wireless chip.
diff --git a/drivers/staging/rt2860/common/rtmp_init.c b/drivers/staging/rt2860/common/rtmp_init.c
index 004f530..f34011c 100644
--- a/drivers/staging/rt2860/common/rtmp_init.c
+++ b/drivers/staging/rt2860/common/rtmp_init.c
@@ -38,18 +38,8 @@
     Jan Lee  2006-09-15    RT2860. Change for 802.11n , EEPROM, Led, BA, HT.
 */
 #include "../rt_config.h"
-#ifndef RT30xx
-#ifdef RT2860
-#include "firmware.h"
-#include <linux/bitrev.h>
-#endif
-#ifdef RT2870
-#include "../../rt2870/common/firmware.h"
-#endif
-#endif
-#ifdef RT30xx
-#include "../../rt3070/firmware.h"
-#endif
+#include <linux/firmware.h>
+#include <linux/crc-itu-t.h>
 
 UCHAR    BIT8[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
 ULONG    BIT32[] = {0x00000001, 0x00000002, 0x00000004, 0x00000008,
@@ -63,59 +53,6 @@ ULONG    BIT32[] = {0x00000001, 0x00000002, 0x00000004, 0x00000008,
 
 char*   CipherName[] = {"none","wep64","wep128","TKIP","AES","CKIP64","CKIP128"};
 
-const unsigned short ccitt_16Table[] = {
-	0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50A5, 0x60C6, 0x70E7,
-	0x8108, 0x9129, 0xA14A, 0xB16B, 0xC18C, 0xD1AD, 0xE1CE, 0xF1EF,
-	0x1231, 0x0210, 0x3273, 0x2252, 0x52B5, 0x4294, 0x72F7, 0x62D6,
-	0x9339, 0x8318, 0xB37B, 0xA35A, 0xD3BD, 0xC39C, 0xF3FF, 0xE3DE,
-	0x2462, 0x3443, 0x0420, 0x1401, 0x64E6, 0x74C7, 0x44A4, 0x5485,
-	0xA56A, 0xB54B, 0x8528, 0x9509, 0xE5EE, 0xF5CF, 0xC5AC, 0xD58D,
-	0x3653, 0x2672, 0x1611, 0x0630, 0x76D7, 0x66F6, 0x5695, 0x46B4,
-	0xB75B, 0xA77A, 0x9719, 0x8738, 0xF7DF, 0xE7FE, 0xD79D, 0xC7BC,
-	0x48C4, 0x58E5, 0x6886, 0x78A7, 0x0840, 0x1861, 0x2802, 0x3823,
-	0xC9CC, 0xD9ED, 0xE98E, 0xF9AF, 0x8948, 0x9969, 0xA90A, 0xB92B,
-	0x5AF5, 0x4AD4, 0x7AB7, 0x6A96, 0x1A71, 0x0A50, 0x3A33, 0x2A12,
-	0xDBFD, 0xCBDC, 0xFBBF, 0xEB9E, 0x9B79, 0x8B58, 0xBB3B, 0xAB1A,
-	0x6CA6, 0x7C87, 0x4CE4, 0x5CC5, 0x2C22, 0x3C03, 0x0C60, 0x1C41,
-	0xEDAE, 0xFD8F, 0xCDEC, 0xDDCD, 0xAD2A, 0xBD0B, 0x8D68, 0x9D49,
-	0x7E97, 0x6EB6, 0x5ED5, 0x4EF4, 0x3E13, 0x2E32, 0x1E51, 0x0E70,
-	0xFF9F, 0xEFBE, 0xDFDD, 0xCFFC, 0xBF1B, 0xAF3A, 0x9F59, 0x8F78,
-	0x9188, 0x81A9, 0xB1CA, 0xA1EB, 0xD10C, 0xC12D, 0xF14E, 0xE16F,
-	0x1080, 0x00A1, 0x30C2, 0x20E3, 0x5004, 0x4025, 0x7046, 0x6067,
-	0x83B9, 0x9398, 0xA3FB, 0xB3DA, 0xC33D, 0xD31C, 0xE37F, 0xF35E,
-	0x02B1, 0x1290, 0x22F3, 0x32D2, 0x4235, 0x5214, 0x6277, 0x7256,
-	0xB5EA, 0xA5CB, 0x95A8, 0x8589, 0xF56E, 0xE54F, 0xD52C, 0xC50D,
-	0x34E2, 0x24C3, 0x14A0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,
-	0xA7DB, 0xB7FA, 0x8799, 0x97B8, 0xE75F, 0xF77E, 0xC71D, 0xD73C,
-	0x26D3, 0x36F2, 0x0691, 0x16B0, 0x6657, 0x7676, 0x4615, 0x5634,
-	0xD94C, 0xC96D, 0xF90E, 0xE92F, 0x99C8, 0x89E9, 0xB98A, 0xA9AB,
-	0x5844, 0x4865, 0x7806, 0x6827, 0x18C0, 0x08E1, 0x3882, 0x28A3,
-	0xCB7D, 0xDB5C, 0xEB3F, 0xFB1E, 0x8BF9, 0x9BD8, 0xABBB, 0xBB9A,
-	0x4A75, 0x5A54, 0x6A37, 0x7A16, 0x0AF1, 0x1AD0, 0x2AB3, 0x3A92,
-	0xFD2E, 0xED0F, 0xDD6C, 0xCD4D, 0xBDAA, 0xAD8B, 0x9DE8, 0x8DC9,
-	0x7C26, 0x6C07, 0x5C64, 0x4C45, 0x3CA2, 0x2C83, 0x1CE0, 0x0CC1,
-	0xEF1F, 0xFF3E, 0xCF5D, 0xDF7C, 0xAF9B, 0xBFBA, 0x8FD9, 0x9FF8,
-	0x6E17, 0x7E36, 0x4E55, 0x5E74, 0x2E93, 0x3EB2, 0x0ED1, 0x1EF0
-};
-#define ByteCRC16(v, crc) \
-	(unsigned short)((crc << 8) ^  ccitt_16Table[((crc >> 8) ^ (v)) & 255])
-
-#ifdef RT2870
-unsigned char BitReverse(unsigned char x)
-{
-	int i;
-	unsigned char Temp=0;
-	for(i=0; ; i++)
-	{
-		if(x & 0x80)	Temp |= 0x80;
-		if(i==7)		break;
-		x	<<= 1;
-		Temp >>= 1;
-	}
-	return Temp;
-}
-#endif
-
 //
 // BBP register initialization set
 //
@@ -243,12 +180,14 @@ RTMP_REG_PAIR	STAMACRegTable[] =	{
 // RT2870 Firmware Spec only used 1 oct for version expression
 //
 #define FIRMWARE_MINOR_VERSION	7
-
+#define FW_FILENAME_V1 "rt2870.bin"
+#define FW_FILENAME_V2 "rt3071.bin"
+MODULE_FIRMWARE(FW_FILENAME_V1);
+MODULE_FIRMWARE(FW_FILENAME_V2);
 #endif // RT2870 //
 
 // New 8k byte firmware size for RT3071/RT3072
 #define FIRMWAREIMAGE_MAX_LENGTH	0x2000
-#define FIRMWAREIMAGE_LENGTH		(sizeof (FirmwareImage) / sizeof(UCHAR))
 #define FIRMWARE_MAJOR_VERSION	0
 
 #define FIRMWAREIMAGEV1_LENGTH	0x1000
@@ -256,6 +195,8 @@ RTMP_REG_PAIR	STAMACRegTable[] =	{
 
 #ifdef RT2860
 #define FIRMWARE_MINOR_VERSION	2
+#define FW_FILENAME "rt2860.bin"
+MODULE_FIRMWARE(FW_FILENAME);
 #endif
 
 
@@ -3314,45 +3255,67 @@ NDIS_STATUS NICLoadFirmware(
 	IN PRTMP_ADAPTER pAd)
 {
 	NDIS_STATUS		Status = NDIS_STATUS_SUCCESS;
-	PUCHAR			pFirmwareImage;
 	ULONG			FileLength, Index;
-	//ULONG			firm;
 	UINT32			MacReg = 0;
 #ifdef RT2870
 	UINT32			Version = (pAd->MACVersion >> 16);
 #endif // RT2870 //
+	struct device		*dev;
+	const struct firmware	*fw = NULL;
+	const char		*name;
+	int			err;
 
-	pFirmwareImage = FirmwareImage;
-	FileLength = sizeof(FirmwareImage);
+#ifdef RT2860
+	dev = &((POS_COOKIE)pAd->OS_Cookie)->pci_dev->dev;
+	name = FW_FILENAME;
+	FileLength = MAX_FIRMWARE_IMAGE_SIZE;
+#endif
 #ifdef RT2870
-	// New 8k byte firmware size for RT3071/RT3072
-	//printk("Usb Chip\n");
-	if (FIRMWAREIMAGE_LENGTH == FIRMWAREIMAGE_MAX_LENGTH)
-	//The firmware image consists of two parts. One is the origianl and the other is the new.
-	//Use Second Part
-	{
-		if ((Version != 0x2860) && (Version != 0x2872) && (Version != 0x3070))
-		{	// Use Firmware V2.
-			//printk("KH:Use New Version,part2\n");
-			pFirmwareImage = (PUCHAR)&FirmwareImage[FIRMWAREIMAGEV1_LENGTH];
-			FileLength = FIRMWAREIMAGEV2_LENGTH;
-		}
-		else
-		{
-			//printk("KH:Use New Version,part1\n");
-			pFirmwareImage = FirmwareImage;
-			FileLength = FIRMWAREIMAGEV1_LENGTH;
-		}
+	dev = &((POS_COOKIE)pAd->OS_Cookie)->pUsb_Dev->dev;
+	if (Version == 0x2860 || Version == 0x2872 || Version == 0x3070) {
+		name = FW_FILENAME_V1;
+		FileLength = FIRMWAREIMAGEV1_LENGTH;
+	} else {
+		name = FW_FILENAME_V2;
+		FileLength = FIRMWAREIMAGEV2_LENGTH;
 	}
-	else
-	{
-		DBGPRINT(RT_DEBUG_ERROR, ("KH: bin file should be 8KB.\n"));
-		Status = NDIS_STATUS_FAILURE;
+#endif
+
+	err = request_firmware(&fw, name, dev);
+	if (err) {
+		dev_err(dev, "firmware file %s request failed (%d)\n",
+			name, err);
+		goto fail;
 	}
 
-#endif // RT2870 //
+	if (fw->size != FileLength) {
+		dev_err(dev, "firmware file %s size is wrong\n", name);
+		goto fail;
+	}
 
-	RT28XX_WRITE_FIRMWARE(pAd, pFirmwareImage, FileLength);
+	/* is it new enough? */
+	pAd->FirmwareVersion = (fw->data[fw->size - 4] << 8 |
+				fw->data[fw->size - 3]);
+
+	if (pAd->FirmwareVersion <
+	    (FIRMWARE_MAJOR_VERSION << 8 | FIRMWARE_MINOR_VERSION)) {
+		dev_err(dev, "rt28x0sta: firmware file %s is too old\n",
+		       name);
+		goto fail;
+	}
+
+	/* is the internal CRC correct? */
+	if (crc_itu_t_bitreversed(0xffff, fw->data, fw->size - 2) !=
+	    (bitrev8(fw->data[fw->size - 2]) << 8 |
+	     bitrev8(fw->data[fw->size - 1]))) {
+		/* CRC fail */
+		dev_err(dev, "firmware file %s failed internal CRC\n", name);
+		goto fail;
+	}
+
+	RT28XX_WRITE_FIRMWARE(pAd, fw->data, fw->size);
+
+	release_firmware(fw);
 
 	/* check if MCU is ready */
 	Index = 0;
@@ -3372,9 +3335,15 @@ NDIS_STATUS NICLoadFirmware(
 		DBGPRINT(RT_DEBUG_ERROR, ("NICLoadFirmware: MCU is not ready\n\n\n"));
 	} /* End of if */
 
+out:
     DBGPRINT(RT_DEBUG_TRACE,
 			 ("<=== %s (status=%d)\n", __func__, Status));
     return Status;
+
+fail:
+	release_firmware(fw);
+	Status = NDIS_STATUS_FAILURE;
+	goto out;
 } /* End of NICLoadFirmware */
 
 
diff --git a/drivers/staging/rt2870/Kconfig b/drivers/staging/rt2870/Kconfig
index cd4f0b6..59d533d 100644
--- a/drivers/staging/rt2870/Kconfig
+++ b/drivers/staging/rt2870/Kconfig
@@ -1,7 +1,8 @@
 config RT2870
 	tristate "Ralink 2870 wireless support"
-	depends on BROKEN
 	depends on USB && X86 && WLAN_80211
+	select CRC_ITU_T
+	select FW_LOADER
 	---help---
 	  This is an experimental driver for the Ralink 2870 wireless chip.
 
diff --git a/drivers/staging/rt3070/Kconfig b/drivers/staging/rt3070/Kconfig
index e414305..7242d5e 100644
--- a/drivers/staging/rt3070/Kconfig
+++ b/drivers/staging/rt3070/Kconfig
@@ -1,7 +1,8 @@
 config RT3070
 	tristate "Ralink 3070 wireless support"
-	depends on BROKEN
 	depends on USB && X86 && WLAN_80211
+	select CRC_ITU_T
+	select FW_LOADER
 	---help---
 	  This is an experimental driver for the Ralink 3070 wireless chip.
 
-- 
1.6.3.1

