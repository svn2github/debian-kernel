From git-commits-head-owner@vger.kernel.org Sat Sep 30 01:10:37 2006
Date: Fri, 29 Sep 2006 17:02:12 GMT
Message-Id: <200609291702.k8TH2C5A031438@hera.kernel.org>
From: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
To: git-commits-head@vger.kernel.org
Subject: [PATCH] reiserfs_fsync should only use barriers when they are enabled

commit 25736b1c692d436508585d1d710912e6f76be2d8
tree 8cf9a65b5a6d464ceabfe992b49a028a9a939198
parent d4328b40af16bae62ff8f854060d33daad237093
author Chris Mason <mason@suse.com> 1159520394 -0700
committer Linus Torvalds <torvalds@g5.osdl.org> 1159546691 -0700

[PATCH] reiserfs_fsync should only use barriers when they are enabled

make sure that reiserfs_fsync only triggers barriers when mounted with -o
barrier=flush

Signed-off-by: Chris Mason <mason@suse.com>
Signed-off-by: Andrew Morton <akpm@osdl.org>
Signed-off-by: Linus Torvalds <torvalds@osdl.org>

 fs/reiserfs/file.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/fs/reiserfs/file.c b/fs/reiserfs/file.c
index 1627edd..1cfbe85 100644
--- a/fs/reiserfs/file.c
+++ b/fs/reiserfs/file.c
@@ -130,7 +130,7 @@ static int reiserfs_sync_file(struct fil
 	reiserfs_write_lock(p_s_inode->i_sb);
 	barrier_done = reiserfs_commit_for_inode(p_s_inode);
 	reiserfs_write_unlock(p_s_inode->i_sb);
-	if (barrier_done != 1)
+	if (barrier_done != 1 && reiserfs_barrier_flush(p_s_inode->i_sb))
 		blkdev_issue_flush(p_s_inode->i_sb->s_bdev, NULL);
 	if (barrier_done < 0)
 		return barrier_done;
