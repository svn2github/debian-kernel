Subject: [PATCH] m68k: Replace `Linux/68k' by `Linux/m68k'

From: Geert Uytterhoeven <geert@linux-m68k.org>

m68k: Replace `Linux/68k' by `Linux/m68k'

We switched to `Linux/m68k' a very long time ago

Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
---
 CREDITS                                 |    6 +++---
 Documentation/crypto/descore-readme.txt |    2 +-
 Documentation/devices.txt               |   10 +++++-----
 Documentation/m68k/kernel-options.txt   |    2 +-
 arch/m68k/Kconfig                       |    2 +-
 arch/m68k/ifpsp060/iskeleton.S          |    6 +++---
 arch/m68k/ifpsp060/os.S                 |    4 ++--
 arch/m68k/kernel/head.S                 |    4 ++--
 arch/m68knommu/Kconfig                  |    4 ++--
 arch/m68knommu/platform/68328/ints.c    |    2 +-
 drivers/char/ser_a2232fw.ax             |    2 +-
 drivers/macintosh/via-cuda.c            |    2 +-
 drivers/macintosh/via-pmu68k.c          |    8 ++++----
 drivers/net/a2065.c                     |    4 ++--
 drivers/net/a2065.h                     |    4 ++--
 drivers/net/apne.c                      |    2 +-
 drivers/net/lib8390.c                   |    2 +-
 drivers/net/macmace.c                   |    4 ++--
 drivers/net/pcmcia/axnet_cs.c           |    2 +-
 drivers/net/sonic.h                     |    2 +-
 drivers/scsi/NCR5380.c                  |    2 +-
 drivers/scsi/atari_NCR5380.c            |    2 +-
 drivers/scsi/sun3_NCR5380.c             |    2 +-
 drivers/serial/68360serial.c            |    2 +-
 drivers/video/macfb.c                   |    4 ++--
 drivers/video/valkyriefb.c              |    2 +-
 drivers/video/valkyriefb.h              |    2 +-
 fs/affs/Changes                         |    2 +-
 include/asm-m68k/elf.h                  |    2 +-
 include/asm-m68knommu/bootstd.h         |    2 +-
 include/asm-m68knommu/delay.h           |    2 +-
 include/asm-m68knommu/elf.h             |    2 +-
 include/asm-m68knommu/entry.h           |    2 +-
 include/asm-m68knommu/processor.h       |    2 +-
 include/asm-xtensa/bootparam.h          |    2 +-
 include/linux/major.h                   |    2 +-
 include/linux/pmu.h                     |    4 ++--
 37 files changed, 56 insertions(+), 56 deletions(-)

--- a/CREDITS
+++ b/CREDITS
@@ -174,7 +174,7 @@ N: Ralf Baechle
 E: ralf@gnu.org
 P: 1024/AF7B30C1 CF 97 C2 CC 6D AE A7 FE  C8 BA 9C FC 88 DE 32 C3
 D: Linux/MIPS port
-D: Linux/68k hacker
+D: Linux/m68k hacker
 S: Hauptstrasse 19
 S: 79837 St. Blasien
 S: Germany
@@ -1548,7 +1548,7 @@ E: dhd@eradicator.org
 E: dhd@cepstral.com
 D: PA-RISC port
 D: Nubus subsystem
-D: Generic 68k Macintosh framebuffer driver
+D: Generic m68k Macintosh framebuffer driver
 D: STI framebuffer tweaks
 D: LTPC driver tweaks
 S: 110 S. 12th St., Apt. A
@@ -2132,7 +2132,7 @@ D: dv1394
 
 N: Hamish Macdonald
 E: hamishm@lucent.com
-D: Linux/68k port
+D: Linux/m68k port
 S: 32 Clydesdale Avenue
 S: Kanata, Ontario
 S: Canada K2M-2G7
--- a/Documentation/crypto/descore-readme.txt
+++ b/Documentation/crypto/descore-readme.txt
@@ -249,7 +249,7 @@ b) the compiler may be too stupid to rea
 
 i assume that indexing is cheaper or equivalent to auto increment/decrement,
 where the index is 7 bits unsigned or smaller.
-this assumption is reversed for 68k and vax.
+this assumption is reversed for m68k and vax.
 
 i assume that addresses can be cheaply formed from two registers,
 or from a register and a small constant.
--- a/Documentation/devices.txt
+++ b/Documentation/devices.txt
@@ -19,8 +19,8 @@ The LaTeX version of this document is no
 This document is included by reference into the Filesystem Hierarchy
 Standard (FHS).	 The FHS is available from http://www.pathname.com/fhs/.
 
-Allocations marked (68k/Amiga) apply to Linux/68k on the Amiga
-platform only.	Allocations marked (68k/Atari) apply to Linux/68k on
+Allocations marked (m68k/Amiga) apply to Linux/m68k on the Amiga
+platform only.	Allocations marked (m68k/Atari) apply to Linux/m68k on
 the Atari platform only.
 
 The symbol {2.6} means the allocation is obsolete and scheduled for
@@ -328,7 +328,7 @@ Your cooperation is appreciated.
 		  2 = /dev/inportbm	Microsoft Inport bus mouse
 		  3 = /dev/atibm	ATI XL bus mouse
 		  4 = /dev/jbm		J-mouse
-		  4 = /dev/amigamouse	Amiga mouse (68k/Amiga)
+		  4 = /dev/amigamouse	Amiga mouse (m68k/Amiga)
 		  5 = /dev/atarimouse	Atari mouse
 		  6 = /dev/sunmouse	Sun mouse
 		  7 = /dev/amigamouse1	Second Amiga mouse
@@ -691,7 +691,7 @@ Your cooperation is appreciated.
 		  2 = /dev/staliomem2	Third Stallion card I/O memory
 		  3 = /dev/staliomem3	Fourth Stallion card I/O memory
 
- 28 char	Atari SLM ACSI laser printer (68k/Atari)
+ 28 char	Atari SLM ACSI laser printer (m68k/Atari)
 		  0 = /dev/slm0		First SLM laser printer
 		  1 = /dev/slm1		Second SLM laser printer
 		    ...
@@ -701,7 +701,7 @@ Your cooperation is appreciated.
 		  2 = /dev/sbpcd14	Panasonic CD-ROM controller 3 unit 2
 		  3 = /dev/sbpcd15	Panasonic CD-ROM controller 3 unit 3
 
- 28 block	ACSI disk (68k/Atari)
+ 28 block	ACSI disk (m68k/Atari)
 		  0 = /dev/ada		First ACSI disk whole disk
 		 16 = /dev/adb		Second ACSI disk whole disk
 		 32 = /dev/adc		Third ACSI disk whole disk
--- a/Documentation/m68k/kernel-options.txt
+++ b/Documentation/m68k/kernel-options.txt
@@ -852,7 +852,7 @@ use of this option is now highly unrecom
   Incorrect use can lead to unpredictable behavior, so please only use
 this option if you *know* what you are doing and have a reason to do
 so. In any case if you experience problems and need to use this
-option, please inform us about it by mailing to the Linux/68k kernel
+option, please inform us about it by mailing to the Linux/m68k kernel
 mailing list.
 
   The address mask set by this option specifies which addresses are
--- a/arch/m68k/Kconfig
+++ b/arch/m68k/Kconfig
@@ -60,7 +60,7 @@ config HZ
 	int
 	default 100
 
-mainmenu "Linux/68k Kernel Configuration"
+mainmenu "Linux/m68k Kernel Configuration"
 
 source "init/Kconfig"
 
--- a/arch/m68k/ifpsp060/iskeleton.S
+++ b/arch/m68k/ifpsp060/iskeleton.S
@@ -65,7 +65,7 @@
 | To simply continue execution at the next instruction, just
 | do an "rte".
 |
-| Linux/68k: If returning to user space, check for needed reselections.
+| Linux/m68k: If returning to user space, check for needed reselections.
 
 	.global		_060_isp_done
 _060_isp_done:
@@ -87,7 +87,7 @@ _060_isp_done:
 | a CHK exception stack frame from the Unimplemented Integer Instrcution
 | stack frame and branches to this routine.
 |
-| Linux/68k: commented out test for tracing
+| Linux/m68k: commented out test for tracing
 
 	.global		_060_real_chk
 _060_real_chk:
@@ -127,7 +127,7 @@ real_chk_end:
 | then it create a Trace exception stack frame from the "chk" exception
 | stack frame and branches to the _real_trace() entry point.
 |
-| Linux/68k: commented out test for tracing
+| Linux/m68k: commented out test for tracing
 
 	.global		_060_real_divbyzero
 _060_real_divbyzero:
--- a/arch/m68k/ifpsp060/os.S
+++ b/arch/m68k/ifpsp060/os.S
@@ -65,7 +65,7 @@
 | The result is that Unix processes are allowed to sleep as a consequence
 | of a page fault during a _copyout.
 |
-| Linux/68k: The _060_[id]mem_{read,write}_{byte,word,long} functions
+| Linux/m68k: The _060_[id]mem_{read,write}_{byte,word,long} functions
 | (i.e. all the known length <= 4) are implemented by single moves
 | statements instead of (more expensive) copy{in,out} calls, if
 | working in user space
@@ -305,7 +305,7 @@ dmwls:	move.l		%d0,(%a0)		| store super 
 | Assumes that D0/D1/A0/A1 are scratch registers. The _copyin/_copyout
 | below assume that the SFC/DFC have been set previously.
 |
-| Linux/68k: These are basically non-inlined versions of
+| Linux/m68k: These are basically non-inlined versions of
 | memcpy_{to,from}fs, but without long-transfer optimization
 | Note: Assumed that SFC/DFC are pointing correctly to user data
 | space... Should be right, or are there any exceptions?
--- a/arch/m68k/kernel/head.S
+++ b/arch/m68k/kernel/head.S
@@ -1,7 +1,7 @@
 /* -*- mode: asm -*-
 **
 ** head.S -- This file contains the initial boot code for the
-**	     Linux/68k kernel.
+**	     Linux/m68k kernel.
 **
 ** Copyright 1993 by Hamish Macdonald
 **
@@ -1568,7 +1568,7 @@ func_return	get_bi_record
 /*
  *	MMU Initialization Begins Here
  *
- *	The structure of the MMU tables on the 68k machines
+ *	The structure of the MMU tables on the m68k machines
  *	is thus:
  *	Root Table
  *		Logical addresses are translated through
--- a/arch/m68knommu/Kconfig
+++ b/arch/m68knommu/Kconfig
@@ -3,7 +3,7 @@
 # see Documentation/kbuild/kconfig-language.txt.
 #
 
-mainmenu "uClinux/68k (w/o MMU) Kernel Configuration"
+mainmenu "uClinux/m68k (w/o MMU) Kernel Configuration"
 
 config M68K
 	bool
@@ -174,7 +174,7 @@ config CLOCK_SET
 	help
 	  On some CPU's you do not need to know what the core CPU clock
 	  frequency is. On these you can disable clock setting. On some
-	  traditional 68K parts, and on all ColdFire parts you need to set
+	  traditional m68k parts, and on all ColdFire parts you need to set
 	  the appropriate CPU clock frequency. On these devices many of the
 	  onboard peripherals derive their timing from the master CPU clock
 	  frequency.
--- a/arch/m68knommu/platform/68328/ints.c
+++ b/arch/m68knommu/platform/68328/ints.c
@@ -101,7 +101,7 @@ void __init init_vectors(void)
 	IMR = ~0;
 }
 
-/* The 68k family did not have a good way to determine the source
+/* The m68k family did not have a good way to determine the source
  * of interrupts until later in the family.  The EC000 core does
  * not provide the vector number on the stack, we vector everything
  * into one vector and look in the blasted mask register...
--- a/drivers/char/ser_a2232fw.ax
+++ b/drivers/char/ser_a2232fw.ax
@@ -462,7 +462,7 @@ Speedy2		lda	ACIA0+A_SR	; read status			
 		beq	Speedy2		; not yet, wait more		;
 		stx	CIA+C_CTRLA	; stop the timer		;
 					;				;
-		lda	CIA+C_TAL	; copy timer value for 68k	;
+		lda	CIA+C_TAL	; copy timer value for m68k	;
 		sta	TimerL		;				;
 		lda	CIA+C_TAH	;				;
 		sta	TimerH		;				;
--- a/drivers/macintosh/via-cuda.c
+++ b/drivers/macintosh/via-cuda.c
@@ -158,7 +158,7 @@ int __init find_via_cuda(void)
 	return 0;
     }
 
-    /* Clear and enable interrupts, but only on PPC. On 68K it's done  */
+    /* Clear and enable interrupts, but only on PPC. On m68k it's done  */
     /* for us by the main VIA driver in arch/m68k/mac/via.c        */
 
     out_8(&via[IFR], 0x7f);	/* clear interrupts by writing 1s */
--- a/drivers/macintosh/via-pmu68k.c
+++ b/drivers/macintosh/via-pmu68k.c
@@ -1,5 +1,5 @@
 /*
- * Device driver for the PMU on 68K-based Apple PowerBooks
+ * Device driver for the PMU on m68k-based Apple PowerBooks
  *
  * The VIA (versatile interface adapter) interfaces to the PMU,
  * a 6805 microprocessor core whose primary function is to control
@@ -8,7 +8,7 @@
  * to the keyboard and mouse, as well as the non-volatile RAM
  * and the RTC (real time clock) chip.
  *
- * Adapted for 68K PMU by Joshua M. Thompson
+ * Adapted for m68k PMU by Joshua M. Thompson
  *
  * Based largely on the PowerMac PMU code by Paul Mackerras and
  * Fabio Riccardi.
@@ -122,7 +122,7 @@ static void pmu_enable_backlight(int on)
 static void pmu_set_brightness(int level);
 
 struct adb_driver via_pmu_driver = {
-	"68K PMU",
+	"m68k PMU",
 	pmu_probe,
 	pmu_init,
 	pmu_send_request,
@@ -260,7 +260,7 @@ pmu_init(void)
 	/* Enable backlight */
 	pmu_enable_backlight(1);
 
-	printk("adb: PMU 68K driver v0.5 for Unified ADB.\n");
+	printk("adb: PMU m68k driver v0.5 for Unified ADB.\n");
 
 	return 0;
 }
--- a/drivers/net/a2065.c
+++ b/drivers/net/a2065.c
@@ -1,5 +1,5 @@
 /*
- * Amiga Linux/68k A2065 Ethernet Driver
+ * Amiga Linux/m68k A2065 Ethernet Driver
  *
  * (C) Copyright 1995-2003 by Geert Uytterhoeven <geert@linux-m68k.org>
  *
@@ -12,7 +12,7 @@
  *
  * This program is based on
  *
- *	ariadne.?:	Amiga Linux/68k Ariadne Ethernet Driver
+ *	ariadne.?:	Amiga Linux/m68k Ariadne Ethernet Driver
  *			(C) Copyright 1995 by Geert Uytterhoeven,
  *                                            Peter De Schrijver
  *
--- a/drivers/net/a2065.h
+++ b/drivers/net/a2065.h
@@ -1,5 +1,5 @@
 /*
- * Amiga Linux/68k A2065 Ethernet Driver
+ * Amiga Linux/m68k A2065 Ethernet Driver
  *
  * (C) Copyright 1995 by Geert Uytterhoeven <geert@linux-m68k.org>
  *
@@ -7,7 +7,7 @@
  *
  * This program is based on
  *
- *	ariadne.?:	Amiga Linux/68k Ariadne Ethernet Driver
+ *	ariadne.?:	Amiga Linux/m68k Ariadne Ethernet Driver
  *			(C) Copyright 1995 by Geert Uytterhoeven,
  *			Peter De Schrijver
  *
--- a/drivers/net/apne.c
+++ b/drivers/net/apne.c
@@ -1,5 +1,5 @@
 /*
- * Amiga Linux/68k 8390 based PCMCIA Ethernet Driver for the Amiga 1200
+ * Amiga Linux/m68k 8390 based PCMCIA Ethernet Driver for the Amiga 1200
  *
  * (C) Copyright 1997 Alain Malek
  *                    (Alain.Malek@cryogen.com)
--- a/drivers/net/lib8390.c
+++ b/drivers/net/lib8390.c
@@ -36,7 +36,7 @@
   Paul Gortmaker	: tweak ANK's above multicast changes a bit.
   Paul Gortmaker	: update packet statistics for v2.1.x
   Alan Cox		: support arbitary stupid port mappings on the
-  			  68K Macintosh. Support >16bit I/O spaces
+  			  m68k Macintosh. Support >16bit I/O spaces
   Paul Gortmaker	: add kmod support for auto-loading of the 8390
 			  module by all drivers that require it.
   Alan Cox		: Spinlocking work, added 'BUG_83C690'
--- a/drivers/net/macmace.c
+++ b/drivers/net/macmace.c
@@ -1,5 +1,5 @@
 /*
- *	Driver for the Macintosh 68K onboard MACE controller with PSC
+ *	Driver for the Macintosh m68k onboard MACE controller with PSC
  *	driven DMA. The MACE driver code is derived from mace.c. The
  *	Mac68k theory of operation is courtesy of the MacBSD wizards.
  *
@@ -249,7 +249,7 @@ static int __devinit mace_probe(struct p
 	dev->set_multicast_list	= mace_set_multicast;
 	dev->set_mac_address	= mace_set_address;
 
-	printk(KERN_INFO "%s: 68K MACE, hardware address %s\n",
+	printk(KERN_INFO "%s: m68k MACE, hardware address %s\n",
 	       dev->name, print_mac(mac, dev->dev_addr));
 
 	err = register_netdev(dev);
--- a/drivers/net/pcmcia/axnet_cs.c
+++ b/drivers/net/pcmcia/axnet_cs.c
@@ -857,7 +857,7 @@ module_exit(exit_axnet_cs);
   Paul Gortmaker	: tweak ANK's above multicast changes a bit.
   Paul Gortmaker	: update packet statistics for v2.1.x
   Alan Cox		: support arbitary stupid port mappings on the
-  			  68K Macintosh. Support >16bit I/O spaces
+  			  m68k Macintosh. Support >16bit I/O spaces
   Paul Gortmaker	: add kmod support for auto-loading of the 8390
 			  module by all drivers that require it.
   Alan Cox		: Spinlocking work, added 'BUG_83C690'
--- a/drivers/net/sonic.h
+++ b/drivers/net/sonic.h
@@ -9,7 +9,7 @@
  * and pad structure members must be exchanged. Also, the structures
  * need to be changed accordingly to the bus size.
  *
- * 981229 MSch:	did just that for the 68k Mac port (32 bit, big endian)
+ * 981229 MSch:	did just that for the m68k Mac port (32 bit, big endian)
  *
  * 990611 David Huggins-Daines <dhd@debian.org>: This machine abstraction
  * does not cope with 16-bit bus sizes very well.  Therefore I have
--- a/drivers/scsi/NCR5380.c
+++ b/drivers/scsi/NCR5380.c
@@ -125,7 +125,7 @@
  *
  * This is a generic 5380 driver.  To use it on a different platform, 
  * one simply writes appropriate system specific macros (ie, data
- * transfer - some PC's will use the I/O bus, 68K's must use 
+ * transfer - some PC's will use the I/O bus, m68k's must use 
  * memory mapped) and drops this file in their 'C' wrapper.
  *
  * (Note from hch:  unfortunately it was not enough for the different
--- a/drivers/scsi/atari_NCR5380.c
+++ b/drivers/scsi/atari_NCR5380.c
@@ -126,7 +126,7 @@
  * This driver attempts to address these problems :
  * This is a generic 5380 driver.  To use it on a different platform,
  * one simply writes appropriate system specific macros (ie, data
- * transfer - some PC's will use the I/O bus, 68K's must use
+ * transfer - some PC's will use the I/O bus, m68k's must use
  * memory mapped) and drops this file in their 'C' wrapper.
  *
  * As far as command queueing, two queues are maintained for
--- a/drivers/scsi/sun3_NCR5380.c
+++ b/drivers/scsi/sun3_NCR5380.c
@@ -120,7 +120,7 @@
  * This driver attempts to address these problems :
  * This is a generic 5380 driver.  To use it on a different platform, 
  * one simply writes appropriate system specific macros (ie, data
- * transfer - some PC's will use the I/O bus, 68K's must use 
+ * transfer - some PC's will use the I/O bus, m68k's must use 
  * memory mapped) and drops this file in their 'C' wrapper.
  *
  * As far as command queueing, two queues are maintained for 
--- a/drivers/serial/68360serial.c
+++ b/drivers/serial/68360serial.c
@@ -2802,7 +2802,7 @@ int serial_console_setup( struct console
 	volatile	struct uart_pram		*sup;
 
 /* mleslie TODO:
- * add something to the 68k bootloader to store a desired initial console baud rate */
+ * add something to the m68k bootloader to store a desired initial console baud rate */
 
 /* 	bd_t						*bd; */ /* a board info struct used by EPPC-bug */
 /* 	bd = (bd_t *)__res; */
--- a/drivers/video/macfb.c
+++ b/drivers/video/macfb.c
@@ -563,7 +563,7 @@ static int macfb_setcolreg(unsigned regn
 			}
 			break;
 			/* I'm pretty sure that one or the other of these
-			   doesn't exist on 68k Macs */
+			   doesn't exist on m68k Macs */
 		case 24:
 			red   >>= 8;
 			green >>= 8;
@@ -719,7 +719,7 @@ static int __init macfb_init(void)
 		break;
 	case 24:
 	case 32:
-		/* XXX: have to test these... can any 68k Macs
+		/* XXX: have to test these... can any m68k Macs
 		   actually do this on internal video? */
 		macfb_defined.red.offset = 16;
 		macfb_defined.red.length = 8;
--- a/drivers/video/valkyriefb.c
+++ b/drivers/video/valkyriefb.c
@@ -332,7 +332,7 @@ int __init valkyriefb_init(void)
 	    || mac_bi_data.id == MAC_MODEL_P588))
 		return 0;
 
-	/* Hardcoded addresses... welcome to 68k Macintosh country :-) */
+	/* Hardcoded addresses... welcome to m68k Macintosh country :-) */
 	frame_buffer_phys = 0xf9000000;
 	cmap_regs_phys = 0x50f24000;
 	flags = IOMAP_NOCACHE_SER; /* IOMAP_WRITETHROUGH?? */
--- a/drivers/video/valkyriefb.h
+++ b/drivers/video/valkyriefb.h
@@ -9,7 +9,7 @@
  * 
  * vmode 10 changed by Steven Borley <sjb@salix.demon.co.uk>, 14 mai 2000
  *
- * Ported to 68k Macintosh by David Huggins-Daines <dhd@debian.org>
+ * Ported to m68k Macintosh by David Huggins-Daines <dhd@debian.org>
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License
--- a/fs/affs/Changes
+++ b/fs/affs/Changes
@@ -197,7 +197,7 @@ Version 3.6
 - Fixed bug in add_entry(): When doing a sorted insert,
   the pointer to the next entry in the hash chain wasn't
   correctly byte-swapped. Since most of the users of the
-  affs use it on a 68k, they didn't notice. But why did
+  affs use it on a m68k, they didn't notice. But why did
   I not find this during my tests?
 
 - Fixed some oversights (version wasn't updated on some
--- a/include/asm-m68k/elf.h
+++ b/include/asm-m68k/elf.h
@@ -9,7 +9,7 @@
 #include <asm/user.h>
 
 /*
- * 68k ELF relocation types
+ * m68k ELF relocation types
  */
 #define R_68K_NONE	0
 #define R_68K_32	1
--- a/include/asm-m68knommu/bootstd.h
+++ b/include/asm-m68knommu/bootstd.h
@@ -30,7 +30,7 @@
 #define __BN_flash_erase_range		19
 #define __BN_flash_write_range		20
 
-/* Calling conventions compatible to (uC)linux/68k
+/* Calling conventions compatible to (uC)linux/m68k
  * We use simmilar macros to call into the bootloader as for uClinux
  */
 
--- a/include/asm-m68knommu/delay.h
+++ b/include/asm-m68knommu/delay.h
@@ -34,7 +34,7 @@ static inline void __delay(unsigned long
 
 /*
  *	Ideally we use a 32*32->64 multiply to calculate the number of
- *	loop iterations, but the older standard 68k and ColdFire do not
+ *	loop iterations, but the older standard m68k and ColdFire do not
  *	have this instruction. So for them we have a clsoe approximation
  *	loop using 32*32->32 multiplies only. This calculation based on
  *	the ARM version of delay.
--- a/include/asm-m68knommu/elf.h
+++ b/include/asm-m68knommu/elf.h
@@ -9,7 +9,7 @@
 #include <asm/user.h>
 
 /*
- * 68k ELF relocation types
+ * m68k ELF relocation types
  */
 #define R_68K_NONE  0
 #define R_68K_32    1
--- a/include/asm-m68knommu/entry.h
+++ b/include/asm-m68knommu/entry.h
@@ -152,7 +152,7 @@ LENOSYS = 38
 #else /* !CONFIG_COLDFIRE */
 
 /*
- * Standard 68k interrupt entry and exit macros.
+ * Standard m68k interrupt entry and exit macros.
  */
 .macro SAVE_ALL
 	clrl	%sp@-			/* stkadj */
--- a/include/asm-m68knommu/processor.h
+++ b/include/asm-m68knommu/processor.h
@@ -80,7 +80,7 @@ struct thread_struct {
 
 /*
  * Coldfire stacks need to be re-aligned on trap exit, conventional
- * 68k can handle this case cleanly.
+ * m68k can handle this case cleanly.
  */
 #if defined(CONFIG_COLDFIRE)
 #define	reformat(_regs)		do { (_regs)->format = 0x4; } while(0)
--- a/include/asm-xtensa/bootparam.h
+++ b/include/asm-xtensa/bootparam.h
@@ -9,7 +9,7 @@
  *
  * Copyright (C) 2001 - 2005  Tensilica Inc.
  *
- * (Concept borrowed from the 68K port)
+ * (Concept borrowed from the m68k port)
  */
 
 #ifndef _XTENSA_BOOTPARAM_H
--- a/include/linux/major.h
+++ b/include/linux/major.h
@@ -53,7 +53,7 @@
 #define STL_SIOMEMMAJOR		28
 #define ACSI_MAJOR		28
 #define AZTECH_CDROM_MAJOR	29
-#define GRAPHDEV_MAJOR		29   /* SparcLinux & Linux/68k /dev/fb */
+#define GRAPHDEV_MAJOR		29   /* SparcLinux & Linux/m68k /dev/fb */
 #define CM206_CDROM_MAJOR	32
 #define IDE2_MAJOR		33
 #define IDE3_MAJOR		34
--- a/include/linux/pmu.h
+++ b/include/linux/pmu.h
@@ -90,8 +90,8 @@ enum {
 	PMU_HEATHROW_BASED,	/* PowerBook G3 series */
 	PMU_PADDINGTON_BASED,	/* 1999 PowerBook G3 */
 	PMU_KEYLARGO_BASED,	/* Core99 motherboard (PMU99) */
-	PMU_68K_V1,		/* 68K PMU, version 1 */
-	PMU_68K_V2, 		/* 68K PMU, version 2 */
+	PMU_68K_V1,		/* m68k PMU, version 1 */
+	PMU_68K_V2,		/* m68k PMU, version 2 */
 };
 
 /* PMU PMU_POWER_EVENTS commands */
