arch/m68k/atari/ataints.c:	   ATARIHW_PRESENT(TT_MFP)) ||									\
arch/m68k/atari/ataints.c:	   !((n) & 1) && ATARIHW_PRESENT(SCC)) ||						\
arch/m68k/atari/ataints.c:	if (ATARIHW_PRESENT(TT_MFP)) {
arch/m68k/atari/ataints.c:	if (ATARIHW_PRESENT(SCC) && !atari_SCC_reset_done) {
arch/m68k/atari/ataints.c:	if (ATARIHW_PRESENT(SCU)) {
arch/m68k/atari/ataints.c:	if (ATARIHW_PRESENT(PCM_8BIT) && ATARIHW_PRESENT(MICROWIRE)) {
arch/m68k/atari/config.c:	if (!MACH_IS_HADES && !ATARIHW_PRESENT(ST_SCSI)) {
arch/m68k/atari/config.c:		if (ATARIHW_PRESENT(MSTE_CLK))
arch/m68k/atari/config.c:	if (ATARIHW_PRESENT(name))			\
arch/m68k/atari/debug.c:	if (ATARIHW_PRESENT(TT_MFP) && baud >= 6) {
drivers/block/ataflop.c:		if (ATARIHW_PRESENT(FDCSPEED))
drivers/block/ataflop.c:	if (ATARIHW_PRESENT(FDCSPEED))
drivers/block/ataflop.c:	if (ATARIHW_PRESENT(FDCSPEED))
drivers/block/ataflop.c:	if (ATARIHW_PRESENT(FDCSPEED)) {
drivers/block/ataflop.c:	if (ATARIHW_PRESENT(FDCSPEED))
drivers/block/ataflop.c:		if (ATARIHW_PRESENT(EXTD_DMA)) {
drivers/block/ataflop.c:			paddr = ATARIHW_PRESENT(EXTD_DMA) ? 
drivers/block/ataflop.c:	if (ATARIHW_PRESENT(EXTD_DMA))
drivers/block/ataflop.c:		if (ATARIHW_PRESENT( EXTD_DMA ))
drivers/block/ataflop.c:			if (ATARIHW_PRESENT(FDCSPEED)) {
drivers/block/ataflop.c:			addr = ATARIHW_PRESENT( EXTD_DMA ) ? ReqData : DMABuffer;
drivers/block/ataflop.c:			if (!ATARIHW_PRESENT( EXTD_DMA ))
drivers/block/ataflop.c:	if (ATARIHW_PRESENT( EXTD_DMA ))
drivers/block/ataflop.c:		if (ATARIHW_PRESENT( FDCSPEED ) || MACH_IS_MEDUSA)
drivers/block/ataflop.c:	if (ATARIHW_PRESENT(FDCSPEED))
drivers/char/dsp56k.c:	if(!MACH_IS_ATARI || !ATARIHW_PRESENT(DSP56K)) {
drivers/char/nvram.c:#define CHECK_DRIVER_INIT()	(MACH_IS_ATARI && ATARIHW_PRESENT(TT_CLK))
drivers/ide/legacy/falconide.c:    if (MACH_IS_ATARI && ATARIHW_PRESENT(IDE)) {
drivers/input/keyboard/atakbd.c:	if (!MACH_IS_ATARI || !ATARIHW_PRESENT(ST_MFP))
drivers/input/mouse/atarimouse.c:	if (!MACH_IS_ATARI || !ATARIHW_PRESENT(ST_MFP))
drivers/scsi/atari_scsi.c:#define	IS_A_TT()	ATARIHW_PRESENT(TT_SCSI)
drivers/scsi/atari_scsi.c:	    (!ATARIHW_PRESENT(ST_SCSI) && !ATARIHW_PRESENT(TT_SCSI)) ||
drivers/scsi/atari_scsi.c:		if (ATARIHW_PRESENT(TT_CLK) && nvram_check_checksum()) {
drivers/scsi/atari_scsi.c:	if (MACH_IS_ATARI && ATARIHW_PRESENT(ST_SCSI) &&
drivers/scsi/atari_scsi.c:	    !ATARIHW_PRESENT(EXTD_DMA) && m68k_num_memory > 1) {
drivers/scsi/atari_scsi.c:		atari_dma_stram_mask = (ATARIHW_PRESENT(EXTD_DMA) ? 0x00000000
drivers/video/atafb.c:	if (ATARIHW_PRESENT(PCM_8BIT)) {
drivers/video/atafb.c:	if (ATARIHW_PRESENT(EXTD_SHIFTER)) {
drivers/video/atafb.c:	var->red.length = ATARIHW_PRESENT(EXTD_SHIFTER) ? 4 : 3;
drivers/video/atafb.c:	if (ATARIHW_PRESENT(EXTD_SHIFTER))
drivers/video/atafb.c:	if (ATARIHW_PRESENT(EXTD_SHIFTER))
drivers/video/atafb.c:	if (ATARIHW_PRESENT(PCM_8BIT)) {
drivers/video/atafb.c:	if (!ATARIHW_PRESENT(EXTD_SHIFTER))
drivers/video/atafb.c:	if (ATARIHW_PRESENT(EXTD_SHIFTER))
drivers/video/atafb.c:	    (!ATARIHW_PRESENT(EXTD_SHIFTER) && var->xoffset))
drivers/video/atafb.c:		if (ATARIHW_PRESENT(TT_SHIFTER)) {
drivers/video/atafb.c:		if (ATARIHW_PRESENT(VIDEL_SHIFTER)) {
drivers/video/atafb.c:		if (ATARIHW_PRESENT(STND_SHIFTER) ||
drivers/video/atafb.c:		    ATARIHW_PRESENT(EXTD_SHIFTER)) {
include/asm-m68k/atarihw.h:#define ATARIHW_PRESENT(name)	(atari_hw_present.name)
sound/oss/dmasound/dmasound_atari.c:	if (MACH_IS_ATARI && ATARIHW_PRESENT(PCM_8BIT)) {
sound/oss/dmasound/dmasound_atari.c:	    if (ATARIHW_PRESENT(CODEC)) {
sound/oss/dmasound/dmasound_atari.c:	    } else if (ATARIHW_PRESENT(MICROWIRE)) {
drivers/char/atari_scc.c:	int escc = ATARIHW_PRESENT(ST_ESCC);
drivers/char/atari_scc.c:	if (!(ATARIHW_PRESENT(SCC) || ATARIHW_PRESENT(ST_ESCC)))
drivers/char/atari_scc.c:	if (ATARIHW_PRESENT(TT_MFP) && baud >= 6) {
---
 arch/m68k/atari/platform.c |   10 ++++++++++
 1 file changed, 10 insertions(+)

--- /dev/null
+++ b/arch/m68k/atari/platform.c
@@ -0,0 +1,10 @@
+/*
+ *  Copyright (C) 2007 Geert Uytterhoeven
+ *
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file COPYING in the main directory of this archive
+ * for more details.
+ */
+
+#include <linux/platform_device.h>
+
