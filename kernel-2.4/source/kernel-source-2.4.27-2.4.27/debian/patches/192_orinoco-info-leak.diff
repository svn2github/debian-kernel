From stable-bounces@linux.kernel.org  Tue Oct  4 20:36:20 2005
Date: Tue, 04 Oct 2005 21:33:10 -0400
From: Pavel Roskin <proski@gnu.org>
To: orinoco-devel <orinoco-devel@lists.sourceforge.net>, NetDev <netdev@vger.kernel.org>
Cc: Meder Kydyraliev <meder@o0o.nu>
Subject: [PATCH] orinoco: Information leakage due to incorrect padding

The orinoco driver can send uninitialized data exposing random pieces of
the system memory.  This happens because data is not padded with zeroes
when its length needs to be increased.

Reported by Meder Kydyraliev <meder@o0o.nu>

Signed-off-by: Pavel Roskin <proski@gnu.org>
Signed-off-by: Chris Wright <chrisw@osdl.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/net/wireless/orinoco.c |   14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

Backported to Debian's 2.6.8 by Horms

--- from-0001/drivers/net/wireless/orinoco.c
+++ to-0003/drivers/net/wireless/orinoco.c	2005-10-11 15:26:22.000000000 +0900
@@ -2358,9 +2358,14 @@ orinoco_xmit(struct sk_buff *skb, struct
 		return 0;
 	}
 
-	/* Length of the packet body */
-	/* FIXME: what if the skb is smaller than this? */
-	len = max_t(int,skb->len - ETH_HLEN, ETH_ZLEN - ETH_HLEN);
+	/* Check packet length, pad short packets, round up odd length */
+	len = max_t(int, ALIGN(skb->len, 2), ETH_ZLEN);
+	if (skb->len < len) {
+		skb = skb_padto(skb, len);
+		if (skb == NULL)
+			goto fail;
+	}
+	len -= ETH_HLEN;
 
 	eh = (struct ethhdr *)skb->data;
 
@@ -2411,7 +2416,8 @@ orinoco_xmit(struct sk_buff *skb, struct
 	}
 
 	/* Round up for odd length packets */
-	err = hermes_bap_pwrite(hw, USER_BAP, p, RUP_EVEN(data_len), txfid, data_off);
+	err = hermes_bap_pwrite(hw, USER_BAP, p, data_len,
+				txfid, data_off);
 	if (err) {
 		printk(KERN_ERR "%s: Error %d writing packet to BAP\n",
 		       dev->name, err);
