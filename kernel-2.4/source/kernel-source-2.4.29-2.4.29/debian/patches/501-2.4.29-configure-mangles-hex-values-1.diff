# This is a BitKeeper generated diff -Nru style patch.
#
# ChangeSet
#   2005/01/28 07:46:20-02:00 npollitt@mvista.com 
#   [PATCH] Configure mangles hex values
#   
#   When doing a make oldconfig, the hex function strips the leading '0x' from hex
#   values.  The '0x' is needed in the final autoconf.h, and its absence causes
#   the following problem.
#   
#   If I start with a hex value in my config file like this:
#   CONFIG_LOWMEM_SIZE=0x40000000
#   When I run make oldconfig, it strips out the '0x' leaving this:
#   CONFIG_LOWMEM_SIZE=40000000
#   Then if I run make xconfig, this is not considered a valid hex value, so it
#   replaces my value with the default:
#   CONFIG_LOWMEM_SIZE=0x20000000
#   
#   The following patch removes the lines that strip the 0x from the hex value.
#   It also checks the result for the leading 0x and inserts it if necessary.
# 
# scripts/Configure
#   2005/01/26 21:19:52-02:00 npollitt@mvista.com +7 -4
#   Configure mangles hex values
# 
diff -Nru a/scripts/Configure b/scripts/Configure
--- a/scripts/Configure	2005-02-03 05:58:38 -08:00
+++ b/scripts/Configure	2005-02-03 05:58:38 -08:00
@@ -378,15 +378,18 @@
 function hex () {
 	old=$(eval echo "\${$2}")
 	def=${old:-$3}
-	def=${def#*[x,X]}
 	while :; do
 	  readln "$1 ($2) [$def] " "$def" "$old"
-	  ans=${ans#*[x,X]}
-	  if expr "$ans" : '[0-9a-fA-F][0-9a-fA-F]*$' > /dev/null; then
+	  if expr "$ans" : '0x[0-9a-fA-F][0-9a-fA-F]*$' > /dev/null; then
 	    define_hex "$2" "$ans"
 	    break
 	  else
-	    help "$2"
+	    if expr "$ans" : '[0-9a-fA-F][0-9a-fA-F]*$' > /dev/null; then
+	      define_hex "$2" "0x$ans"
+	      break
+	    else
+	      help "$2"
+	    fi
 	  fi
 	done
 }
