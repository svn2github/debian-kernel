# origin: Debian, #193365
# cset: n/a
# inclusion: not submitted
# description: use seq interface for /proc/modules to avoid truncation
# revision date: 2004-09-03

diff -urN kernel-source-2.4.26/fs/proc/proc_misc.c kernel-source-2.4.26-1/fs/proc/proc_misc.c
--- kernel-source-2.4.26/fs/proc/proc_misc.c	2003-11-29 05:26:21.000000000 +1100
+++ kernel-source-2.4.26-1/fs/proc/proc_misc.c	2003-11-29 20:53:47.000000000 +1100
@@ -52,9 +52,6 @@
  */
 extern int get_hardware_list(char *);
 extern int get_stram_list(char *);
-#ifdef CONFIG_MODULES
-extern int get_module_list(char *);
-#endif
 extern int get_device_list(char *);
 extern int get_filesystem_list(char *);
 extern int get_exec_domain_list(char *);
@@ -269,12 +266,17 @@
 };
 
 #ifdef CONFIG_MODULES
-static int modules_read_proc(char *page, char **start, off_t off,
-				 int count, int *eof, void *data)
+extern struct seq_operations modules_op;
+static int modules_open(struct inode *inode, struct file *file)
 {
-	int len = get_module_list(page);
-	return proc_calc_metrics(page, start, off, count, eof, len);
+	return seq_open(file, &modules_op);
 }
+static struct file_operations proc_modules_operations = {
+	open:		modules_open,
+	read:		seq_read,
+	llseek:		seq_lseek,
+	release:	seq_release,
+};
 
 extern struct seq_operations ksyms_op;
 static int ksyms_open(struct inode *inode, struct file *file)
@@ -604,9 +606,6 @@
 #ifdef CONFIG_STRAM_PROC
 		{"stram",	stram_read_proc},
 #endif
-#ifdef CONFIG_MODULES
-		{"modules",	modules_read_proc},
-#endif
 		{"stat",	kstat_read_proc},
 		{"devices",	devices_read_proc},
 #if !defined(CONFIG_ARCH_S390) && !defined(CONFIG_X86)
@@ -642,6 +641,7 @@
 	create_seq_entry("slabinfo",S_IWUSR|S_IRUGO,&proc_slabinfo_operations);
 #ifdef CONFIG_MODULES
 	create_seq_entry("ksyms", 0, &proc_ksyms_operations);
+	create_seq_entry("modules", 0, &proc_modules_operations);
 #endif
 	proc_root_kcore = create_proc_entry("kcore", S_IRUSR, NULL);
 	if (proc_root_kcore) {
diff -urN kernel-source-2.4.26/kernel/module.c kernel-source-2.4.26-1/kernel/module.c
--- kernel-source-2.4.26/kernel/module.c	2003-08-25 21:44:44.000000000 +1000
+++ kernel-source-2.4.26-1/kernel/module.c	2003-09-03 20:27:20.000000000 +1000
@@ -1166,6 +1166,89 @@
 	return PAGE_SIZE - left;
 }
 
+static void *s_modules_start(struct seq_file *m, loff_t *pos)
+{
+	struct module *v;
+	loff_t n = *pos;
+
+	lock_kernel();
+	for (v = module_list, n = *pos; v != &kernel_module; n--, v = v->next) {
+		if (n == 0)
+			return v;
+	}
+	unlock_kernel();
+	return NULL;
+}
+
+static void *s_modules_next(struct seq_file *m, void *p, loff_t *pos)
+{
+	struct module *v = p;
+	(*pos)++;
+	v = v->next;
+	if (v == &kernel_module) {
+		unlock_kernel();
+		return NULL;
+	}
+	return v;
+}
+
+static void s_modules_stop(struct seq_file *m, void *p)
+{
+	if (p)
+		unlock_kernel();
+}
+
+static int s_modules_show(struct seq_file *m, void *p)
+{
+	struct module *v = p;
+	struct module_ref *ref;
+
+	seq_printf(m, "%-20s%8lu", v->name, v->size);
+
+	if (v->flags & MOD_RUNNING)
+		seq_printf(m, "%4ld",
+		      (mod_member_present(v, can_unload)
+		       && v->can_unload
+		       ? -1L : (long)atomic_read(&v->uc.usecount)));
+
+	if (v->flags & MOD_DELETED)
+		seq_puts(m, " (deleted)");
+	else if (v->flags & MOD_RUNNING) {
+		if (v->flags & MOD_AUTOCLEAN)
+			seq_puts(m, " (autoclean)");
+		if (!(v->flags & MOD_USED_ONCE))
+			seq_puts(m, " (unused)");
+	}
+	else if (v->flags & MOD_INITIALIZING)
+		seq_puts(m, " (initializing)");
+	else
+		seq_puts(m, " (uninitialized)");
+
+	if ((ref = v->refs) != NULL) {
+		seq_puts(m, " [");
+		while (1) {
+			seq_puts(m, ref->ref->name);
+
+			if ((ref = ref->next_ref) != NULL)
+				seq_putc(m, ' ');
+			else
+				break;
+		}
+		seq_putc(m, ']');
+	}
+
+	seq_putc(m, '\n');
+
+	return 0;
+}
+
+struct seq_operations modules_op = {
+	start:	s_modules_start,
+	next:	s_modules_next,
+	stop:	s_modules_stop,
+	show:	s_modules_show
+};
+
 /*
  * Called by the /proc file system to return a current list of ksyms.
  */

