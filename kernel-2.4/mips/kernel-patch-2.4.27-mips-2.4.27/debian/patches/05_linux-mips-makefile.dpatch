#! /bin/sh -e
## 05_linux-mips-makefile.dpatch by Thiemo Seufer <seufer@csv.ica.uni-stuttgart.de>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Sanitize compiler/assembler flags

if [ $# -lt 1 ]; then
    echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch} ${2:+-d $2}"

case "$1" in
    -patch) patch -p0 ${patch_opts} < $0;;
    -unpatch) patch -R -p0 ${patch_opts} < $0;;
    *)
        echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
        exit 1;;
esac

exit 0

--- arch/mips/Makefile.old	2004-05-18 00:46:58.000000000 +0200
+++ arch/mips/Makefile	2004-05-18 17:49:53.000000000 +0200
@@ -57,117 +57,54 @@ endif
 endif
 
 #
-# Use: $(call set_gccflags,<cpu0>,<isa0>,<cpu1>,<isa1>,<isa2>)
-#
-# <cpu0>,<isa0> -- preferred CPU and ISA designations (may require
-#                  recent tools)
-# <cpu1>,<isa1> -- fallback CPU and ISA designations (have to work
-#                  with up to the oldest supported tools)
-# <isa2>        -- an ISA designation used as an ABI selector for
-#                  gcc versions that do not support "-mabi=32"
-#                  (depending on the CPU type, either "mips1" or
-#                  "mips2")
-#
-set_gccflags = $(shell \
-while :; do \
-	cpu=$(1); isa=-$(2); \
-	for gcc_opt in -march= -mcpu=; do \
-		$(CC) $$gcc_opt$$cpu $$isa -S -o /dev/null \
-			-xc /dev/null > /dev/null 2>&1 && \
-			break 2; \
-	done; \
-	cpu=$(3); isa=-$(4); \
-	for gcc_opt in -march= -mcpu=; do \
-		$(CC) $$gcc_opt$$cpu $$isa -S -o /dev/null \
-			-xc /dev/null > /dev/null 2>&1 && \
-			break 2; \
-	done; \
-	break; \
-done; \
-gcc_abi=-mabi=32; gcc_cpu=$$cpu; \
-if $(CC) $$gcc_abi -S -o /dev/null -xc /dev/null > /dev/null 2>&1; then \
-	gcc_isa=$$isa; \
-else \
-	gcc_abi=; gcc_isa=-$(5); \
-fi; \
-gas_abi=-Wa,-32; gas_cpu=$$cpu; gas_isa=-Wa,$$isa; \
-while :; do \
-	for gas_opt in -Wa,-march= -Wa,-mcpu=; do \
-		$(CC) $$gas_abi $$gas_opt$$cpu $$gas_isa -Wa,-Z -c \
-			-o /dev/null -xassembler /dev/null > /dev/null 2>&1 && \
-			break 2; \
-	done; \
-	gas_abi=; gas_opt=; gas_cpu=; gas_isa=; \
-	break; \
-done; \
-if test "$$gcc_opt" = -march= && test -n "$$gcc_abi"; then \
-	$(CC) $$gcc_abi $$gcc_opt$$gcc_cpu -S -o /dev/null \
-		-xc /dev/null > /dev/null 2>&1 && \
-		gcc_isa=; \
-fi; \
-echo $$gcc_abi $$gcc_opt$$gcc_cpu $$gcc_isa $$gas_abi $$gas_opt$$gas_cpu $$gas_isa)
-
-#
 # CPU-dependent compiler/assembler options for optimization.
 #
 ifdef CONFIG_CPU_R3000
-GCCFLAGS	+= $(call set_gccflags,r3000,mips1,r3000,mips1,mips1)
+GCCFLAGS	+= -march=r3000
 endif
 ifdef CONFIG_CPU_TX39XX
-GCCFLAGS	+= $(call set_gccflags,r3900,mips1,r3000,mips1,mips1)
+GCCFLAGS	+= -march=r3900
 endif
 ifdef CONFIG_CPU_R6000
-GCCFLAGS	+= $(call set_gccflags,r6000,mips2,r6000,mips2,mips2) \
-		   -Wa,--trap
+GCCFLAGS	+= -march=r6000 -Wa,--trap
 endif
 ifdef CONFIG_CPU_R4300
-GCCFLAGS	+= $(call set_gccflags,r4300,mips3,r4300,mips3,mips2) \
-		   -Wa,--trap
+GCCFLAGS	+= -march=vr4300 -Wa,--trap
 endif
 ifdef CONFIG_CPU_VR41XX
-GCCFLAGS	+= $(call set_gccflags,r4100,mips3,r4600,mips3,mips2) \
-		   -Wa,--trap
+GCCFLAGS	+= -march=vr4100 -Wa,--trap
 endif
 ifdef CONFIG_CPU_R4X00
-GCCFLAGS	+= $(call set_gccflags,r4600,mips3,r4600,mips3,mips2) \
-		   -Wa,--trap
+GCCFLAGS	+= -march=r4600 -Wa,--trap
 endif
 ifdef CONFIG_CPU_TX49XX
-GCCFLAGS	+= $(call set_gccflags,r4600,mips3,r4600,mips3,mips2) \
-		   -Wa,--trap
+GCCFLAGS	+= -march=r4600 -Wa,--trap
 endif
 ifdef CONFIG_CPU_MIPS32
-GCCFLAGS	+= $(call set_gccflags,mips32,mips32,r4600,mips3,mips2) \
-		   -Wa,--trap
+GCCFLAGS	+= -march=mips32 -Wa,--trap
 endif
 ifdef CONFIG_CPU_MIPS64
-GCCFLAGS	+= $(call set_gccflags,mips64,mips64,r4600,mips3,mips2) \
-		   -Wa,--trap
+GCCFLAGS	+= -march=mips64 -Wa,--trap
 endif
 ifdef CONFIG_CPU_R5000
-GCCFLAGS	+= $(call set_gccflags,r5000,mips4,r5000,mips4,mips2) \
-		   -Wa,--trap
+GCCFLAGS	+= -march=vr5000 -Wa,--trap
 endif
 ifdef CONFIG_CPU_R5432
-GCCFLAGS	+= $(call set_gccflags,r5400,mips4,r5000,mips4,mips2) \
-		   -Wa,--trap
+GCCFLAGS	+= -march=vr5400 -Wa,--trap
 endif
 ifdef CONFIG_CPU_NEVADA
-GCCFLAGS	+= $(call set_gccflags,rm5200,mips4,r5000,mips4,mips2) \
-		   -Wa,--trap
-#GCCFLAGS	+= $(call check_gcc,-mmad,)
+GCCFLAGS	+= -march=vr5000 -Wa,--trap
 endif
 ifdef CONFIG_CPU_RM7000
-GCCFLAGS	+= $(call set_gccflags,rm7000,mips4,r5000,mips4,mips2) \
-		   -Wa,--trap
+# rm7000 available since gcc 3.4
+GCCFLAGS	+= $(call check_gcc,-march=rm7000,-march=vr5000) -Wa,--trap
 endif
 ifdef CONFIG_CPU_RM9000
-GCCFLAGS	+= $(call set_gccflags,rm9000,mips4,r5000,mips4,mips2) \
-		   -Wa,--trap
+# rm9000 available since gcc 3.4
+GCCFLAGS	+= $(call check_gcc,-march=rm9000,-march=vr5000) -Wa,--trap
 endif
 ifdef CONFIG_CPU_SB1
-GCCFLAGS	+= $(call set_gccflags,sb1,mips64,r5000,mips4,mips2) \
-		   -Wa,--trap
+GCCFLAGS	+= -march=sb1 -Wa,--trap
 ifdef CONFIG_SB1_PASS_1_WORKAROUNDS
 MODFLAGS	+= -msb1-pass1-workarounds
 endif
