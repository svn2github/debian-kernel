# origin: kaber (BitKeeper)
# cset: 1.1449.16.5 (2.4) key=41297323Uj27U3EtErMOVt3qtcIIOw
# inclusion: upstream
# description: [PKT_SCHED]: Fix class leak in CBQ scheduler.
# revision date: Fri, 26 Nov 2004 14:59:38 +0900
#
# S rset: ChangeSet|1.1449.16.4..1.1449.16.5
# I rset: net/sched/sch_cbq.c|1.12..1.13
#
# This is a BitKeeper generated diff -Nru style patch.
#
# ChangeSet
#   2004/08/22 21:31:31-07:00 kaber@trash.net 
#   [PKT_SCHED]: Fix class leak in CBQ scheduler.
#   
#   Signed-off-by: Patrick McHardy <kaber@trash.net>
#   Signed-off-by: David S. Miller <davem@redhat.com>
# 
# net/sched/sch_cbq.c
#   2004/08/22 21:31:25-07:00 kaber@trash.net +8 -6
#   [PKT_SCHED]: Fix class leak in CBQ scheduler.
#   
#   Signed-off-by: Patrick McHardy <kaber@trash.net>
#   Signed-off-by: David S. Miller <davem@redhat.com>
# 
#
===== net/sched/sch_cbq.c 1.12 vs 1.13 =====
--- 1.12/net/sched/sch_cbq.c	2004-06-19 05:53:45 +09:00
+++ 1.13/net/sched/sch_cbq.c	2004-08-23 13:31:25 +09:00
@@ -1712,15 +1712,18 @@
 	}
 }
 
-static void cbq_destroy_class(struct cbq_class *cl)
+static void cbq_destroy_class(struct Qdisc *sch, struct cbq_class *cl)
 {
+	struct cbq_sched_data *q = (struct cbq_sched_data *)sch->data;
+
 	cbq_destroy_filters(cl);
 	qdisc_destroy(cl->q);
 	qdisc_put_rtab(cl->R_tab);
 #ifdef CONFIG_NET_ESTIMATOR
 	qdisc_kill_estimator(&cl->stats);
 #endif
-	kfree(cl);
+	if (cl != &q->link)
+		kfree(cl);
 }
 
 static void
@@ -1743,8 +1746,7 @@
 
 		for (cl = q->classes[h]; cl; cl = next) {
 			next = cl->next;
-			if (cl != &q->link)
-				cbq_destroy_class(cl);
+			cbq_destroy_class(sch, cl);
 		}
 	}
 
@@ -1766,7 +1768,7 @@
 		spin_unlock_bh(&sch->dev->queue_lock);
 #endif
 
-		cbq_destroy_class(cl);
+		cbq_destroy_class(sch, cl);
 	}
 }
 
@@ -2000,7 +2002,7 @@
 	sch_tree_unlock(sch);
 
 	if (--cl->refcnt == 0)
-		cbq_destroy_class(cl);
+		cbq_destroy_class(sch, cl);
 
 	return 0;
 }
