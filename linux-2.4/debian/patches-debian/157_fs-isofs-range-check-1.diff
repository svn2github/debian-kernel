# origin: chrisw (BitKeeper)
# cset: 1.1483 (2.4) key=4244a3aeRsXj7r4AC7s1QgPvWpjtoA
# URL: http://linux.bkbits.net:8080/linux-2.4/cset@4244a3aeRsXj7r4AC7s1QgPvWpjtoA
# inclusion: upstream
# descrition: [PATCH] isofs: Handle corupted rock-ridge info slightly better.
# revision date: Tue, 29 Mar 2005 17:40:33 +0900
#
# S rset: ChangeSet|1.1482..1.1483
# I rset: fs/isofs/rock.c|1.7..1.8
#
# Key:
# S: Skipped  ChangeSet file only
# O: Original Followed by Updated
# U: Updated  Included with updated range of versions
# I: Included Included verbatim
# E: Excluded Excluded on request from user
# D: Deleted  Manually deleted by subsequent user edit
# R: Revised  Manually revised by subsequent user edit
#
#
# This is a BitKeeper generated diff -Nru style patch.
#
# fs/isofs/rock.c
#   2005/03/26 00:38:11-03:00 chrisw@osdl.org +14 -7
#   isofs: Handle corupted rock-ridge info slightly better.
# 
# ChangeSet
#   2005/03/25 20:50:06-03:00 chrisw@osdl.org 
#   [PATCH] isofs: Handle corupted rock-ridge info slightly better.
#   
#   Michal Zalewski <lcamtuf@dione.ids.pl> discovers range checking flaws in
#   iso9660 filesystem.
#   
#   http://marc.theaimsgroup.com/?l=bugtraq&m=111110067304783&w=2
#   
#   CAN-2005-0815 is assigned to this issue.
#   
#   From: Linus Torvalds <torvalds@osdl.org>
#   
#   isofs: Handle corupted rock-ridge info slightly better.
#   
#   Keyword here being 'slightly'. The code is a mess.
#   
#   Signed-off-by: Chris Wright <chrisw@osdl.org>
# 
#
===== fs/isofs/rock.c 1.7 vs 1.8 =====
--- 1.7/fs/isofs/rock.c	2004-04-14 09:00:00 +09:00
+++ 1.8/fs/isofs/rock.c	2005-03-26 12:38:11 +09:00
@@ -52,6 +52,7 @@
   if(LEN & 1) LEN++;						\
   CHR = ((unsigned char *) DE) + LEN;				\
   LEN = *((unsigned char *) DE) - LEN;                          \
+  if (LEN<0) LEN=0;                                             \
   if (inode->i_sb->u.isofs_sb.s_rock_offset!=-1)                \
   {                                                             \
      LEN-=inode->i_sb->u.isofs_sb.s_rock_offset;                \
@@ -172,12 +173,13 @@ int get_rock_ridge_filename(struct iso_d
     struct rock_ridge * rr;
     int sig;
     
-    while (len > 1){ /* There may be one byte for padding somewhere */
+    while (len > 2){ /* There may be one byte for padding somewhere */
       rr = (struct rock_ridge *) chr;
-      if (rr->len == 0) goto out; /* Something got screwed up here */
+      if (rr->len < 3) goto out; /* Something got screwed up here */
       sig = isonum_721(chr);
       chr += rr->len; 
       len -= rr->len;
+      if (len < 0) goto out;	/* corrupted isofs */
 
       switch(sig){
       case SIG('R','R'):
@@ -191,6 +193,7 @@ int get_rock_ridge_filename(struct iso_d
 	break;
       case SIG('N','M'):
 	if (truncate) break;
+	if (rr->len < 5) break;
         /*
 	 * If the flags are 2 or 4, this indicates '.' or '..'.
 	 * We don't want to do anything with this, because it
@@ -252,12 +255,13 @@ int parse_rock_ridge_inode_internal(stru
     struct rock_ridge * rr;
     int rootflag;
     
-    while (len > 1){ /* There may be one byte for padding somewhere */
+    while (len > 2){ /* There may be one byte for padding somewhere */
       rr = (struct rock_ridge *) chr;
-      if (rr->len == 0) goto out; /* Something got screwed up here */
+      if (rr->len < 3) goto out; /* Something got screwed up here */
       sig = isonum_721(chr);
       chr += rr->len; 
       len -= rr->len;
+      if (len < 0) goto out;	/* corrupted isofs */
       
       switch(sig){
 #ifndef CONFIG_ZISOFS		/* No flag for SF or ZF */
@@ -523,7 +527,7 @@ static int rock_ridge_symlink_readpage(s
 	struct rock_ridge *rr;
 
 	if (!inode->i_sb->u.isofs_sb.s_rock)
-		panic ("Cannot have symlink with high sierra variant of iso filesystem\n");
+		goto error;
 
 	block = inode->i_ino >> bufbits;
 	lock_kernel();
@@ -547,13 +551,15 @@ static int rock_ridge_symlink_readpage(s
 	SETUP_ROCK_RIDGE(raw_inode, chr, len);
 
       repeat:
-	while (len > 1) { /* There may be one byte for padding somewhere */
+	while (len > 2) { /* There may be one byte for padding somewhere */
 		rr = (struct rock_ridge *) chr;
-		if (rr->len == 0)
+		if (rr->len < 3)
 			goto out;	/* Something got screwed up here */
 		sig = isonum_721(chr);
 		chr += rr->len;
 		len -= rr->len;
+		if (len < 0)
+			goto out;	/* corrupted isofs */
 
 		switch (sig) {
 		case SIG('R', 'R'):
@@ -601,6 +607,7 @@ static int rock_ridge_symlink_readpage(s
       fail:
 	brelse(bh);
 	unlock_kernel();
+      error:
 	SetPageError(page);
 	kunmap(page);
 	UnlockPage(page);
