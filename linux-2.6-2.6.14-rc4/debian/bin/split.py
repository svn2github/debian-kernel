#!/usr/bin/python
#
# Scans underlying directory structure for files with names config.*
# where .* is not .stub or .default, and extracts a common
# set of config options from them. The resulting set of options is
# written into the 'config' file. On the second pass each config.*
# file is parsed to remove the common config options found in
# config, with the results written to config.*.stub.
#
import os, string, sys, re

common = []
conffiles = []

def is_option(line):
	result = (len(string.strip(line)) != 0) and (re.match('^#*\s*CONFIG_\w+[\s=]', line))
	return result

def is_not_common(line):
	return (line not in common)
	
def read_list(fname):
	inf = open(fname, 'r')
	opts = filter(is_option, inf.readlines())
	inf.close()
	return opts

def merge_list(list):
	global common
	if len(common) == 0:
		common = list[:]
	else:
		for opt in common:
			if opt not in list: common.remove(opt)
	
def write_out(list, fname):
	outf = open(fname, 'w')
	outf.write('#\n# Automatically generated by ' + sys.argv[0] + '\n#\n') 
	outf.writelines(list)
	outf.close()

def walk_callback(arg, dir, names):
  	if names.count('.svn'): names.remove('.svn')
	for name in names:
		base, ext = os.path.splitext(name)
		if(base == 'config' and ext not in ('.default', '.stub', '')):
			fname = os.path.join(dir,name)
			conffiles.append(fname)
			print 'Processing ' + fname + ' ... ',
			s = read_list(fname)
			merge_list(s)
			print "done."
#
# Main routine
#
os.path.walk('.', walk_callback, None)
print 'Writing the config output file ... ',
write_out(common, 'config')
print 'done.'
for fname in conffiles:
	print 'Writing the ' + fname + '.stub output file ... ',
	s = filter(is_not_common, read_list(fname))
	write_out(s, fname + '.stub')
	print 'done.'
